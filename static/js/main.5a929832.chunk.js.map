{"version":3,"sources":["components/IngredientListItem.jsx","components/IngredientsList.jsx","utils/storage.js","data/PreparingJSONs.js","data/Settings.js","data/RecipeSearchData.js","pages/RecipeDetails.js","components/BottomNavigation.js","components/RecipeCard.js","components/CustomAppBar.js","pages/FavoritePage.js","utils/urlUtils.js","pages/SearchPage.js","pages/MainPages.js","App.js","utils/serviceWorkerRegistration.js","utils/reportWebVitals.js","index.js"],"names":["PurpleCheckBox","styled","Checkbox","IngredientListItem","checkable","ingredient","setChecked","classes","useClasses","className","root","checked","onChange","checkBox","nameCheckable","name","makeStyles","display","flexDirection","paddingRight","alignItems","textAlign","fontSize","paddingLeft","paddingTop","paddingBottom","IngredientsList","ingredients","setIngredients","map","style","width","i","storage","window","localStorage","getItem","key","item","JSON","parse","error","setItem","serializedItem","stringify","prepareNutrientsArray","json","result","push","label","quantity","Math","round","unit","appID","process","appKey","downloadRecipesQuery","query","from","to","fetch","then","response","jsons","hits","length","uri","recipe","image","calories","url","servings","yield","ingredientLines","nutrients","totalNutrients","catch","console","log","downloadRecipeByID","ID","Accordion","withStyles","backgroundColor","margin","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","RecipeDetails","history","useHistory","styles","useStyles","useState","location","state","setRecipe","favs","undefined","isFavouriteInit","isFavourite","setIsFavourite","useEffect","n","href","search","slice","x","container","imageBox","icons","Button","onClick","goBack","IconLeft","IconRight","src","alt","safeArea","Typography","title","details","detailsLeft","detailsRight","elevation","expandIcon","aria-controls","id","variant","ingred","e","accordionDetails","nutrition","Fab","floatingButton","color","marginBottom","overflowX","position","height","overflow","top","bottom","left","right","zIndex","justifyContent","fontWeight","lineHeight","float","description","BottomNavigationBar","pathname","value","setValue","BottomNavigation","_","newValue","BottomNavigationAction","component","Link","icon","button","selected","maxWidth","RecipeCard","subTitle","Card","CardActionArea","CardMedia","media","CardContent","align","noWrap","CustomAppBar","onSearch","canSearch","isSearching","setIsSearching","canClear","setCanClear","searchBarInput","useRef","AppBar","appBar","Toolbar","IconButton","backButton","searchBar","searchBarButton","current","InputBase","placeholder","inputRef","input","target","searchButton","userSelect","padding","borderRadius","FavoritePage","Grid","spacing","justify","val","xs","sm","md","lg","parts","split","lastSegment","pop","OnClickItem","createRecipeDetails","getPathnameSegment","lastFetchCache","SearchPage","recipes","setRecipes","phrase","setPhrase","fetchRecipes","p","isMounted","replace","OnSearchClick","escape","MainPages","App","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5a929832.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst PurpleCheckBox = styled(Checkbox)`\n            color: #6200EE !important;\n            backgroundColor: #6200EE !important;\n`\n\nexport function IngredientListItem({checkable,ingredient, setChecked}) {\n    const classes = useClasses();\n    \n    return (\n      <div className={classes.root}>\n        {checkable && (\n          <>\n            <PurpleCheckBox\n              checked={ingredient.checked}\n              onChange={() => {\n                setChecked();\n              }}\n              className={classes.checkBox}\n            />\n            <div className={classes.nameCheckable}>{ingredient.name}</div>\n          </>\n        )}\n        {!checkable && (\n          <div className={classes.name}>{ingredient.name}</div>\n        )}\n      </div>\n    );\n}\n\nconst useClasses = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  checkBox: {\n    paddingRight: '0.5em',\n  },\n  nameCheckable: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'left',\n    fontSize: '1em',\n  },\n  name: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'left',\n    fontSize: '1em',\n    paddingLeft: '1em',\n    paddingTop: '0.5em',\n    paddingBottom: '0.5em',\n  },\n});\n","import React from 'react';\nimport { IngredientListItem } from './IngredientListItem';\n\nexport function IngredientsList({ ingredients, setIngredients, checkable }) {\n  const setChecked = (i) => {\n    ingredients[i].checked = !ingredients[i].checked;\n    setIngredients([...ingredients]);\n  };\n\n  if (!checkable) {\n    ingredients = ingredients?.map((ingredient) => {\n      return { name: ingredient, checked: false };\n    });\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      {ingredients?.map((ingredient, i) => (\n        <IngredientListItem\n          setChecked={() => {\n            setChecked(i);\n          }}\n          checkable={checkable}\n          ingredient={ingredient}\n          key={i}\n        />\n      ))}\n    </div>\n  );\n}\n","const storage = window.localStorage;\n\n///Gets an object or string for the given key from localStorage\nexport function getItem(key) {\n    var item = storage.getItem(key)\n    if (item === null)\n        return null;\n\n    //Try parsing, if failed return normal string\n    try {\n        return JSON.parse(item)\n    }\n    catch (error) {\n        return item;\n    }\n}\n\n///Sets an object or string for the given key from localStorage\nexport function setItem(key, item) {\n    var serializedItem = item\n    if (typeof item !== 'string') {\n        serializedItem = JSON.stringify(item) //ASK: throw an exception on failure? \n    }\n    storage.setItem(key, serializedItem);\n}\n\nexport function removeItem(key) {\n    storage.removeItem(key)\n}\n","// Removing unnecessary data and creating custom objects:\nexport const prepareCustomJSONs = (jsons) => {\n    // No recipe has been found:\n    if (jsons.length === 0) return 'No results';\n\n    // Some recipes have been found:\n    return jsons.map(json => ({\n        uri: json.recipe.uri,\n        label: json.recipe.label,\n        image: json.recipe.image,\n        calories: Math.round(json.recipe.calories) + ' kcal',\n        url: json.recipe.url,\n        servings: json.recipe.yield + ' servings',\n        ingredients: json.recipe.ingredientLines,\n        nutrients: prepareNutrientsArray(json.recipe.totalNutrients)\n    }));\n}\n\n//We need this function because API returns different structure, depending on q or r param\nexport const prepareCustomJSONsFromID = (jsons) => {\n    // No recipe has been found:\n    if (jsons.length === 0) return 'No results';\n\n    // Some recipes have been found:\n    return jsons.map(json => ({\n        uri: json.uri,\n        label: json.label,\n        image: json.image,\n        calories: Math.round(json.calories) + ' kcal',\n        url: json.url,\n        servings: json.yield + ' servings',\n        ingredients: json.ingredientLines,\n        nutrients: prepareNutrientsArray(json.totalNutrients)\n    }))[0];\n}\n\n// Converting JSON object into array of JSON objects (its keys):\nconst prepareNutrientsArray = (json) => {\n    var result = [];\n    for (var key in json)\n        result.push({\n            label: json[key].label,\n            quantity: Math.round(json[key].quantity * 1000) / 1000,\n            unit: json[key].unit\n        });\n    return result;\n}\n","export const appID = process.env.REACT_APP_appID; //Edamam app ID\nexport const appKey = process.env.REACT_APP_appKey;  //Edamam app key\n","// This file contains method responsible for communicating with EDAMAM's Recipe \n// Search API (documentation: https://developer.edamam.com/edamam-docs-recipe-api)\n\nimport { prepareCustomJSONs, prepareCustomJSONsFromID } from './PreparingJSONs';\nimport { appKey, appID } from './Settings';\n\n// List of recipes:\nexport const downloadRecipesQuery = (query, from, to) => {\n  return fetch(`https://api.edamam.com/search?app_id=${appID}`\n    + `&app_key=${appKey}&q=${query}&from=${from}&to=${to}`)\n    .then(response => response.json())\n    .then(json => prepareCustomJSONs(json.hits))\n    .catch(error => console.log(error));\n};\n\n\n// List of recipes:\nexport const downloadRecipeByID = (ID) => {\n  return fetch(`https://api.edamam.com/search?app_id=${appID}`\n    + `&app_key=${appKey}&r=${ID}`)\n    .then(response => response.json())\n    .then(json => prepareCustomJSONsFromID(json))\n    .catch(error => console.log(error));\n};\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n    Accordion as MuiAccordion,\n    Typography,\n    AccordionSummary as MuiAccordionSummary,\n    AccordionDetails as MuiAccordionDetails,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Fab from '@material-ui/core/Fab';\nimport { useHistory } from 'react-router-dom';\nimport { IngredientsList } from '../components/IngredientsList';\nimport * as storage from '../utils/storage';\nimport { downloadRecipeByID } from '../data/RecipeSearchData';\n\nconst Accordion = withStyles({\n    root: {\n        '&:before': {\n            backgroundColor: 'white',\n        },\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n    root: {\n        minHeight: 0,\n        '&$expanded': {\n            minHeight: 0,\n        },\n    },\n    content: {\n        margin: 0,\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles({\n    root: {\n        paddingRight: '1em',\n        paddingLeft: '1em',\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n})(MuiAccordionDetails);\n\n//returns false if recipe is not found in the favourites dictionary\n//otherwise true\nconst isFavouriteInit = (recipe) => {\n    let favs = storage.getItem('favourites');\n    if (favs === null)\n        return false;\n    return favs[recipe?.uri] !== undefined;\n}\n\nexport default function RecipeDetails() {\n    const history = useHistory();\n    const styles = useStyles();\n    const [recipe, setRecipe] = useState(history?.location?.state?.recipe);\n    const [ingredients, setIngredients] = useState(recipe?.ingredients);\n    const [isFavourite, setIsFavourite] = useState(isFavouriteInit(recipe));\n\n    useEffect(() => {\n        if (recipe === undefined) {\n            //fetch recipe using URL\n            let n = window.location.href.search('recipeDetails') + 'recipeDetails'.length + 1;\n            let uri = window.location.href.slice(n);\n            downloadRecipeByID(uri).then(x => {\n                setRecipe(x);\n            });\n        }\n    }, [recipe])\n\n    const onFABClick = () => {\n        let favs = storage.getItem('favourites');\n        if (favs === null)\n            storage.setItem('favourites', {}); //create a new favourites dictionary if one does not exist\n        //use dict to reduce lookup time to O(1)\n        if (favs[recipe.uri] !== undefined) {\n            delete favs[recipe.uri] //if recipe is already in the dictionary\n            setIsFavourite(false);\n            //remove it.\n        } else {\n            favs[recipe.uri] = recipe; //otherwise add it \n            setIsFavourite(true);\n        }\n        storage.setItem('favourites', favs); //update item after modification\n    }\n\n    const OnClickClose = () => {\n        history.goBack(); //TODO: handle going back in invalid state\n    };\n\n    if (recipe === null || recipe === undefined) {\n        return (<></>);\n    }\n    return (\n        <div className={styles.container}>\n            {/* {Image & icons} */}\n\n            <div className={styles.imageBox}>\n                <div className={styles.icons}>\n                    <Button onClick={() => OnClickClose()} className={styles.IconLeft}>\n                        <CloseIcon />\n                    </Button>\n                    <Button href={`${recipe?.url}`} className={styles.IconRight}>\n                        <LinkIcon />\n                    </Button>\n                </div>\n                <img className={styles.image} src={recipe?.image} alt='recipe' />\n            </div>\n\n            {/* {Title} */}\n\n            <div className={styles.safeArea}>\n                <Typography className={styles.title}>{recipe?.label}</Typography>\n                <div className={styles.details}>\n                    <Typography className={styles.detailsLeft}>\n                        {recipe?.calories}\n                    </Typography>\n                    <Typography className={styles.detailsRight}>\n                        {recipe?.servings}\n                    </Typography>\n                </div>\n            </div>\n\n            {/* {Ingredients} */}\n\n            <Accordion elevation={0}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                >\n                    <Typography variant='h6'>Ingredients</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {(recipe?.ingredients !== undefined) ? <IngredientsList\n                        ingredients={ingredients}\n                        setIngredients={(ingred) => {\n                            setIngredients(ingred);\n                        }}\n                    /> : null}\n\n                </AccordionDetails>\n            </Accordion>\n\n            {/* {Nutrients} */}\n\n            <Accordion elevation={0}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                >\n                    <Typography variant='h6'>Nutrients Info</Typography>\n                </AccordionSummary>\n                <div className={styles.safeArea}>\n                    {recipe?.nutrients?.map((e, key) => {\n                        return (\n                            <AccordionDetails key={key} className={styles.accordionDetails}>\n                                <div className={styles.nutrition}>\n                                    <Typography className={styles.detailsLeft}>\n                                        {e.label}\n                                    </Typography>\n                                    <Typography className={styles.detailsRight}>\n                                        {e.quantity} {e.unit}\n                                    </Typography>\n                                </div>\n                            </AccordionDetails>\n                        );\n                    })}\n                </div>\n            </Accordion>\n\n            {/* Add Favorites button */}\n\n            <Fab onClick={onFABClick} className={styles.floatingButton} color='secondary'>\n                {isFavourite ? <DeleteIcon /> : <FavoriteIcon />}\n            </Fab>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    container: {\n        marginBottom: 50,\n        overflowX: 'hidden',\n    },\n    imageBox: {\n        position: 'relative',\n        height: 192,\n        overflow: 'hidden',\n    },\n    image: {\n        width: '100%',\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        zIndex: -1,\n    },\n    icons: {\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    IconLeft: {\n        position: 'absolute',\n        top: 8,\n        left: 0,\n        color: 'white',\n    },\n    IconRight: {\n        position: 'absolute',\n        top: 8,\n        right: 0,\n        color: 'white',\n    },\n    title: {\n        fontSize: '1.75em',\n        textAlign: 'start',\n        fontWeight: 'bold',\n        lineHeight: '1.0em',\n        paddingTop: '0.5em',\n    },\n    safeArea: {\n        paddingLeft: '1em',\n        paddingRight: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    details: {\n        paddingTop: '0.5em',\n        paddingBottom: '0.5em',\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    nutrition: {\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    detailsLeft: {\n        float: 'left',\n        display: 'inline',\n        width: '50%',\n        textAlign: 'start',\n        fontSize: '1em',\n    },\n    detailsRight: {\n        float: 'right',\n        display: 'inline',\n        width: '50%',\n        textAlign: 'end',\n        fontSize: '1em',\n    },\n    description: {\n        fontSize: '1em',\n        textAlign: 'start',\n    },\n    floatingButton: {\n        position: 'fixed',\n        bottom: 16,\n        right: 16,\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from 'react-router-dom';\n\nexport default function BottomNavigationBar({ pathname }) {\n    const classes = useStyles();\n    const [value, setValue] = useState(pathname);\n\n    const handleChange = (_, newValue) => {\n        setValue(newValue);\n    };\n\n    //Fix for root pathname\n    useEffect(() => {\n        if (pathname === '' || pathname === 'FUD')\n            setValue('search'); //force component rerender\n    }, [pathname]);\n\n    return (\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n            <BottomNavigationAction component={Link} to={'/search'} label='Search' value='search' icon={<SearchIcon />} classes={{ label: classes.label, root: classes.button, selected: classes.selected }} />\n            <BottomNavigationAction component={Link} to={'/favorites'} label='Favorites' value='favorites' icon={<FavoriteIcon />} classes={{ label: classes.label, root: classes.button, selected: classes.selected }} />\n        </BottomNavigation>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        position: 'sticky',\n        bottom: 0,\n        width: '100%',\n        backgroundColor: '#6200EE',\n    },\n    button: {\n        width: '50%',\n        maxWidth: 'none',\n        '&$selected': {\n            color: 'white',\n        },\n    },\n    label: {\n        color: 'white',\n    },\n    selected: {\n\n    }\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\n//title: string,\n//subtitle: string\n//onClick: () => void \n//image: string, link to an image or image object (more info at https://material-ui.com/api/card-media/)\nexport default function RecipeCard ({ title, subTitle, image, onClick }) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} \n            onClick={() => {onClick()}}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={image}\n                    title={title}\n                />\n                <CardContent>\n                    <Typography variant='h6' align='left' noWrap={true}>\n                        {title}\n                    </Typography>\n                    <Typography variant='body2' align='left'>\n                        {subTitle}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        height: 'fit-content',\n    },\n    media: {\n        height: 194,\n    },\n});\n","// Custom App Bar with a 'Recipes' title and clickable SearchIcon,\n// which is responsible for showing Search Bar. The component has\n// been implemented on the basis of: https://material-ui.com/components/app-bar/\n\nimport React, { useRef, useState } from 'react';\nimport { IconButton, AppBar, Toolbar, Typography, InputBase, makeStyles } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nexport default function CustomAppBar({ onSearch, canSearch }) {\n    const styles = useStyles();\n    const [isSearching, setIsSearching] = useState(false);\n    const [canClear, setCanClear] = useState(false);\n    \n    // Searchbar's value:\n    const searchBarInput = useRef('');\n\n    // Reacting for clicking search button in search bar:\n    const searchButtonEvent = () => onSearch(searchBarInput.current.value);\n    \n    return (\n        <div className={styles.root}>\n            <AppBar position='static' className={styles.appBar}>\n            {isSearching \n            ?\n            <Toolbar> \n                <IconButton className={styles.backButton} \n                            onClick={() => { \n                                setIsSearching(false); \n                                setCanClear(false);\n                                }}>\n                    <ArrowBackIcon/>\n                </IconButton>\n                {/* Searchbar */}\n                <div className={styles.searchBar}>\n                    {/* Search */}\n                    <IconButton className={styles.searchBarButton} \n                                onClick={searchButtonEvent}>\n                        <SearchIcon/>\n                    </IconButton>\n                    {/* Input */}\n                    <InputBase placeholder='Search for recipe'\n                               inputRef={searchBarInput}\n                               onChange={(input) => setCanClear(input.target.value.length > 0)}\n                               className={styles.searchBarInput}/>\n                    {/* Clear */}\n                    {canClear\n                    ? \n                    <IconButton className={styles.searchBarButton} \n                                onClick={() => { \n                                    searchBarInput.current.value = ''; \n                                    setCanClear(false);\n                                }}>\n                        <CloseIcon/>\n                    </IconButton>\n                    :\n                    <></>\n                    }\n                </div>\n            </Toolbar>\n            :\n            <Toolbar> {/* Title + button */}\n                <Typography className={styles.title}>Recipes</Typography>\n                {canSearch &&\n                <IconButton className={styles.searchButton} \n                            onClick={() => { setIsSearching(true); }}>\n                    <SearchIcon/>\n                </IconButton>\n                }\n            </Toolbar>\n            }\n            </AppBar>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    // Both variants:\n    root: {\n        position: 'sticky',\n        top: 0,\n        zIndex: 9999,\n    },\n    appBar: { \n        backgroundColor: '#6200EE', \n    },\n\n    // AppBar variant:\n    title: { \n        width: '100%', \n        textAlign: 'left', \n        color: 'rgba(255, 255, 255, 0.75)',\n        fontSize: '1.25em',\n        userSelect: 'none',\n    },\n    searchButton: { \n        padding: 0, \n        color: 'rgba(255, 255, 255, 0.75)',\n    },\n\n    // SearchBar variant:\n    backButton: {\n        paddingLeft: 0, \n        color: 'rgba(255, 255, 255, 0.75)',\n    },\n    searchBar: { \n        borderRadius: 4, \n        backgroundColor: 'rgba(255, 255, 255, 0.75)', \n        width: '100%', \n        display: 'flex',\n    },\n    searchBarButton: { \n        paddingTop: 0, \n        paddingBottom: 0, \n        paddingLeft: '1%', \n        paddingRight: '1%',\n        color: 'rgba(0, 0, 0, 0.75)',\n    },\n    searchBarInput: {\n        width: '100%',\n        fontSize: '1.25em',\n        lineHeight: '1.5em',\n    },\n});\n  ","import { makeStyles } from '@material-ui/core/styles';\nimport * as storage from '../utils/storage';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport RecipeCard from '../components/RecipeCard';\nimport CustomAppBar from '../components/CustomAppBar';\n\nexport default function FavoritePage() {\n    const classes = useStyles();\n    const favs = storage.getItem('favourites');\n    const history = useHistory();\n\n    const OnClickItem = (item) => {\n        let parts = item.uri.split('/');\n        let lastSegment = parts.pop() || parts.pop(); //handle trailing slashes\n        history.push({ pathname: '/recipeDetails/' + lastSegment, state: { recipe: item } });\n    }\n\n    const createRecipeDetails = () => {\n        if (favs === null)\n            return [];\n        var result = [];\n        for (let key in favs) {\n            let val = favs[key];\n            result.push(\n                <Grid item xs={6} sm={4} md={3} lg={2} key={val.url}>\n                    <RecipeCard\n                        title={val.label} subTitle={val.calories}\n                        image={val.image} key={val.url}\n                        onClick={() => OnClickItem(val)} />\n                </Grid>\n            )\n        }\n        return result;\n    }\n\n    return (\n        <>\n            <CustomAppBar canSearch={false}/>\n            <div className={classes.root}>\n                <Grid container spacing={1} justify='center'>\n                    {createRecipeDetails()}\n                </Grid>\n            </div>\n        </>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        margin: 8,\n        minHeight: '100vh',\n    },\n});\n","//Get's nth origin url segment\nexport function getPathnameSegment(n) {\n    let arr = window.location.pathname.split('/');\n    return arr[n];\n}\n","import React, { Fragment, useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecipeCard from '../components/RecipeCard';\nimport CustomAppBar from '../components/CustomAppBar';\nimport { downloadRecipesQuery } from '../data/RecipeSearchData';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { getPathnameSegment } from '../utils/urlUtils';\n\n//Global state for search page\nvar lastFetchCache = [];\n\nexport default function SearchPage() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [recipes, setRecipes] = useState(lastFetchCache);\n    const [phrase, setPhrase] = useState(getPathnameSegment(2)); //TODO: use query string\n\n    const fetchRecipes = () => {\n        let p = phrase\n        if (p === undefined || p === null || p.length === 0) {\n            p = 'shrimp';\n        }\n\n        downloadRecipesQuery(p, 0, 100)\n            .then(recipes => {\n                if (recipes === undefined) console.log('Failed to fetch (wrong keys?)');\n                else {\n                    setRecipes(recipes);\n                    lastFetchCache = recipes;\n                }\n            })\n    }\n\n    //Fetch data on mount, only if cache does not contain anything\n    // eslint-disable-next-line\n    useEffect(() => {\n        if (recipes.length === 0)\n            fetchRecipes();\n        // eslint-disable-next-line\n    }, []);\n\n    //Prevent the following effect, from running on mount\n    const isMounted = useRef(false);\n    //Fetch new data, when phrase changes\n    useEffect(() => {\n        if (isMounted.current === true) {\n            fetchRecipes();\n        }\n        else {\n            isMounted.current = true;\n        }\n        // eslint-disable-next-line\n    }, [phrase]);\n\n    const OnSearchClick = (input) => {\n        history.replace({ pathname: '/search/' + input });\n        setPhrase(input);\n    }\n\n    const OnClickItem = (item) => {\n        history.push({ pathname: '/recipeDetails/' + escape(item.uri), state: { recipe: item } });\n    }\n\n    return (\n        <Fragment>\n            <CustomAppBar canSearch={true} onSearch={input => OnSearchClick(input)} />\n            <div className={classes.root}>\n                <Grid container spacing={1} justify='center'>\n                    {recipes.map(recipe =>\n                        <Grid item xs={6} sm={4} md={3} lg={2} key={recipe.url}>\n                            <RecipeCard\n                                title={recipe.label} subTitle={recipe.calories}\n                                image={recipe.image} key={recipe.url}\n                                onClick={() => OnClickItem(recipe)} />\n                        </Grid>\n                    )}\n                </Grid>\n            </div>\n        </Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    root: {\n        margin: 8,\n        minHeight: '100vh',\n    },\n});\n","import React, { Fragment } from 'react';\nimport BottomNavigationBar from '../components/BottomNavigation';\nimport FavoritePage from './FavoritePage';\nimport SearchPage from './SearchPage';\nimport { getPathnameSegment } from '../utils/urlUtils';\n\nexport default function MainPages() {\n    const pathname = getPathnameSegment(1);\n\n    return (\n        <Fragment>\n            { pathname === 'favorites' ? <FavoritePage /> : <SearchPage /> }\n            <BottomNavigationBar pathname={pathname} />\n        </Fragment>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport RecipeDetails from './pages/RecipeDetails';\nimport MainPages from './pages/MainPages';\n\nexport default function App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Switch>\n          <Route path='/recipeDetails' component={RecipeDetails} />\n          <Route path='/' component={MainPages} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './utils/serviceWorkerRegistration';\nimport reportWebVitals from './utils/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}