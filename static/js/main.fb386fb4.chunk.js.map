{"version":3,"sources":["components/IngredientListItem.jsx","components/IngredientsList.jsx","utils/storage.js","data/PreparingJSONs.js","data/Settings.js","data/RecipeSearchData.js","pages/RecipeDetails.js","components/BottomNavigation.js","components/RecipeCard.js","components/CustomAppBar.js","pages/FavoritePage.js","utils/urlUtils.js","pages/SearchPage.js","pages/MainPages.js","App.js","utils/serviceWorkerRegistration.js","utils/reportWebVitals.js","index.js"],"names":["PurpleCheckBox","styled","Checkbox","IngredientListItem","checkable","ingredient","setChecked","classes","useClasses","className","root","checked","onChange","checkBox","nameCheckable","name","makeStyles","display","flexDirection","paddingRight","alignItems","textAlign","fontSize","paddingLeft","paddingTop","paddingBottom","IngredientsList","ingredients","setIngredients","map","style","width","i","storage","window","localStorage","getItem","key","item","JSON","parse","error","setItem","serializedItem","stringify","getAll","get","uri","t","Favourites","obj","favs","ingred","uriOrObj","prepareNutrientsArray","json","result","push","label","quantity","Math","round","unit","appID","process","appKey","downloadRecipesQuery","query","from","to","fetch","then","response","jsons","hits","length","recipe","image","calories","url","servings","yield","ingredientLines","nutrients","totalNutrients","catch","console","log","downloadRecipeByID","ID","Accordion","withStyles","backgroundColor","margin","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","RecipeDetails","history","useHistory","styles","useStyles","useState","location","state","isFavourite","setIsFavourite","setRecipe","loadRecipe","useCallback","a","x","useEffect","n","href","search","slice","undefined","container","imageBox","icons","Button","onClick","goBack","IconLeft","IconRight","src","alt","safeArea","Typography","title","details","detailsLeft","detailsRight","elevation","expandIcon","aria-controls","id","variant","ingreds","rec","e","accordionDetails","nutrition","Fab","floatingButton","color","marginBottom","overflowX","position","height","overflow","top","bottom","left","right","zIndex","justifyContent","fontWeight","lineHeight","float","description","BottomNavigationBar","pathname","value","setValue","BottomNavigation","_","newValue","BottomNavigationAction","component","Link","icon","button","selected","maxWidth","RecipeCard","subTitle","Card","CardActionArea","CardMedia","media","CardContent","align","noWrap","CustomAppBar","onSearch","canSearch","isSearching","setIsSearching","canClear","setCanClear","searchBarInput","useRef","AppBar","appBar","Toolbar","IconButton","backButton","searchBar","searchBarButton","current","InputBase","placeholder","inputRef","input","target","onKeyDown","keyCode","blur","searchButton","userSelect","padding","borderRadius","FavoritePage","Grid","spacing","justify","val","xs","sm","md","lg","lastSegment","split","pop","OnClickItem","createRecipeDetails","getPathnameSegment","lastFetchCache","SearchPage","recipes","setRecipes","phrase","setPhrase","fetchRecipes","p","isMounted","replace","OnSearchClick","parts","MainPages","App","basename","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fb386fb4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst PurpleCheckBox = styled(Checkbox)`\r\n            color: #6200EE !important;\r\n            backgroundColor: #6200EE !important;\r\n`\r\n\r\nexport function IngredientListItem({checkable,ingredient, setChecked}) {\r\n    const classes = useClasses();\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n        {checkable && (\r\n          <>\r\n            <PurpleCheckBox\r\n              checked={ingredient.checked}\r\n              onChange={() => {\r\n                setChecked();\r\n              }}\r\n              className={classes.checkBox}\r\n            />\r\n            <div className={classes.nameCheckable}>{ingredient.name}</div>\r\n          </>\r\n        )}\r\n        {!checkable && (\r\n          <div className={classes.name}>{ingredient.name}</div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst useClasses = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  checkBox: {\r\n    paddingRight: '0.5em',\r\n  },\r\n  nameCheckable: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'left',\r\n    fontSize: '1em',\r\n  },\r\n  name: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'left',\r\n    fontSize: '1em',\r\n    paddingLeft: '1em',\r\n    paddingTop: '0.5em',\r\n    paddingBottom: '0.5em',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { IngredientListItem } from './IngredientListItem';\r\n\r\nexport function IngredientsList({ ingredients, setIngredients, checkable }) {\r\n  const setChecked = (i) => {\r\n    ingredients[i].checked = !ingredients[i].checked;\r\n    setIngredients([...ingredients]);\r\n  };\r\n\r\n  if (!checkable && typeof ingredients[0] === \"string\") {\r\n    ingredients = ingredients.map((ingredient) => {\r\n      return { name: ingredient, checked: false };\r\n    });\r\n  }\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      {ingredients.map((ingredient, i) => (\r\n        <IngredientListItem\r\n          setChecked={() => {\r\n            setChecked(i);\r\n          }}\r\n          checkable={checkable}\r\n          ingredient={ingredient}\r\n          key={i}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","const storage = window.localStorage;\r\n\r\n///Gets an object or string for the given key from localStorage\r\nexport function getItem(key) {\r\n    var item = storage.getItem(key);\r\n    if (item === null)\r\n        return null;\r\n\r\n    //Try parsing, if failed return normal string\r\n    try {\r\n        return JSON.parse(item);\r\n    }\r\n    catch (error) {\r\n        return item;\r\n    }\r\n}\r\n\r\n///Sets an object or string for the given key from localStorage\r\nexport function setItem(key, item) {\r\n    var serializedItem = item;\r\n    if (typeof item !== 'string') {\r\n        serializedItem = JSON.stringify(item); //ASK: throw an exception on failure? \r\n    }\r\n    storage.setItem(key, serializedItem);\r\n}\r\n\r\nexport function removeItem(key) {\r\n    storage.removeItem(key);\r\n}\r\n\r\nconst getAll = () => {\r\n  return getItem(\"favourites\");\r\n};\r\n\r\nconst get = (uri) => {\r\n  const t = getAll();\r\n  if (!t || !t[uri]) return null;\r\n  return t[uri];\r\n};\r\n\r\nconst isFav = (uri) => {\r\n  if (!uri) { return false; }\r\n  return !!get(uri);\r\n}\r\n\r\nconst set = (obj) => {\r\n  let favs = getAll() || {};\r\n\r\n  obj.ingredients = obj.ingredients.map((ingred) =>\r\n    typeof ingred == \"string\" ? { name: ingred, checked: false } : ingred\r\n  );\r\n  favs[obj.uri] = obj;\r\n  setItem(\"favourites\", favs);\r\n};\r\n\r\nconst drop = (uriOrObj) => {\r\n  let favs = getAll();\r\n  if (typeof uriOrObj === \"string\") {\r\n    delete favs[uriOrObj];\r\n  } else {\r\n    delete favs[uriOrObj.uri];\r\n  }\r\n\r\n  setItem(\"favourites\", favs);\r\n};\r\n\r\nexport const Favourites = {\r\n  getAll: getAll,\r\n  get: get,\r\n  set: set,\r\n  drop: drop,\r\n  isFav: isFav\r\n};\r\n","// Removing unnecessary data and creating custom objects:\r\nexport const prepareCustomJSONs = (jsons) => {\r\n    // No recipe has been found:\r\n    if (jsons.length === 0) return 'No results';\r\n\r\n    // Some recipes have been found:\r\n    return jsons.map(json => ({\r\n        uri: json.recipe.uri,\r\n        label: json.recipe.label,\r\n        image: json.recipe.image,\r\n        calories: Math.round(json.recipe.calories) + ' kcal',\r\n        url: json.recipe.url,\r\n        servings: json.recipe.yield + ' servings',\r\n        ingredients: json.recipe.ingredientLines,\r\n        nutrients: prepareNutrientsArray(json.recipe.totalNutrients)\r\n    }));\r\n}\r\n\r\n//We need this function because API returns different structure, depending on q or r param\r\nexport const prepareCustomJSONsFromID = (jsons) => {\r\n    // No recipe has been found:\r\n    if (jsons.length === 0) return 'No results';\r\n\r\n    // Some recipes have been found:\r\n    return jsons.map(json => ({\r\n        uri: json.uri,\r\n        label: json.label,\r\n        image: json.image,\r\n        calories: Math.round(json.calories) + ' kcal',\r\n        url: json.url,\r\n        servings: json.yield + ' servings',\r\n        ingredients: json.ingredientLines,\r\n        nutrients: prepareNutrientsArray(json.totalNutrients)\r\n    }))[0];\r\n}\r\n\r\n// Converting JSON object into array of JSON objects (its keys):\r\nconst prepareNutrientsArray = (json) => {\r\n    var result = [];\r\n    for (var key in json)\r\n        result.push({\r\n            label: json[key].label,\r\n            quantity: Math.round(json[key].quantity * 1000) / 1000,\r\n            unit: json[key].unit\r\n        });\r\n    return result;\r\n}\r\n","export const appID = process.env.REACT_APP_appID; //Edamam app ID\r\nexport const appKey = process.env.REACT_APP_appKey;  //Edamam app key\r\n","// This file contains method responsible for communicating with EDAMAM's Recipe \r\n// Search API (documentation: https://developer.edamam.com/edamam-docs-recipe-api)\r\n\r\nimport { prepareCustomJSONs, prepareCustomJSONsFromID } from './PreparingJSONs';\r\nimport { appKey, appID } from './Settings';\r\n\r\n// List of recipes:\r\nexport const downloadRecipesQuery = (query, from, to) => {\r\n  return fetch(`https://api.edamam.com/search?app_id=${appID}`\r\n    + `&app_key=${appKey}&q=${query}&from=${from}&to=${to}`)\r\n    .then(response => response.json())\r\n    .then(json => prepareCustomJSONs(json.hits))\r\n    .catch(error => console.log(error));\r\n};\r\n\r\n\r\n// List of recipes:\r\nexport const downloadRecipeByID = (ID) => {\r\n  return fetch(`https://api.edamam.com/search?app_id=${appID}`\r\n    + `&app_key=${appKey}&r=${ID}`)\r\n    .then(response => response.json())\r\n    .then(json => prepareCustomJSONsFromID(json))\r\n    .catch(error => console.log(error));\r\n};\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Accordion as MuiAccordion,\r\n    Typography,\r\n    AccordionSummary as MuiAccordionSummary,\r\n    AccordionDetails as MuiAccordionDetails,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IngredientsList } from '../components/IngredientsList';\r\nimport { Favourites } from '../utils/storage';\r\nimport { downloadRecipeByID } from '../data/RecipeSearchData';\r\n\r\nconst Accordion = withStyles({\r\n    root: {\r\n        '&:before': {\r\n            backgroundColor: 'white',\r\n        },\r\n        '&$expanded': {\r\n            margin: 0,\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        '&$expanded': {\r\n            minHeight: 0,\r\n        },\r\n    },\r\n    content: {\r\n        margin: 0,\r\n        '&$expanded': {\r\n            margin: 0,\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles({\r\n    root: {\r\n        paddingRight: '1em',\r\n        paddingLeft: '1em',\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n})(MuiAccordionDetails);\r\n\r\nexport default function RecipeDetails() {\r\n    const history = useHistory();\r\n    const styles = useStyles();\r\n\r\n    const [isFavourite, setIsFavourite] = useState(\r\n        Favourites.isFav(history.location.state.recipe.uri)\r\n    );\r\n\r\n    const [recipe, setRecipe] = useState(\r\n        Favourites.get(history.location.state.recipe.uri) ||\r\n        history.location.state.recipe\r\n    );\r\n\r\n    const setIngredients = (ingreds) => {\r\n        let rec = { ...recipe };\r\n        rec.ingredients = ingreds;\r\n        Favourites.set(rec);\r\n        setRecipe(rec);\r\n    }\r\n\r\n    const loadRecipe = useCallback((uri) => {\r\n        let url = \"http://www.edamam.com/ontologies/edamam.owl#\" + uri;\r\n        if (Favourites.isFav(url) && !recipe?.ingredients[0]?.name) {\r\n            setRecipe(Favourites.get(url));\r\n        } else if (!recipe) {\r\n            (async () =>\r\n                await downloadRecipeByID(url).then((x) => {\r\n                    setRecipe(x);\r\n                }))();\r\n        }\r\n    }, [recipe]);\r\n\r\n    useEffect(() => {\r\n        let n = window.location.href.search(\"recipeDetails\") + \"recipeDetails\".length + 1;\r\n        let uri = window.location.href.slice(n);\r\n        loadRecipe(uri);\r\n    }, [recipe, loadRecipe]);\r\n\r\n    const onFABClick = () => {\r\n        if (isFavourite) {\r\n            setIsFavourite(false);\r\n            Favourites.drop(recipe);\r\n        }\r\n        else {\r\n            setIsFavourite(true);\r\n            Favourites.set(recipe);\r\n            setRecipe(Favourites.get(recipe.uri));\r\n        }\r\n    }\r\n\r\n    const OnClickClose = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    if (recipe === null || recipe === undefined) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* {Image & icons} */}\r\n\r\n            <div className={styles.imageBox}>\r\n                <div className={styles.icons}>\r\n                    <Button onClick={() => OnClickClose()} className={styles.IconLeft}>\r\n                        <CloseIcon />\r\n                    </Button>\r\n                    <Button href={`${recipe?.url}`} className={styles.IconRight}>\r\n                        <LinkIcon />\r\n                    </Button>\r\n                </div>\r\n                <img className={styles.image} src={recipe?.image} alt='recipe' />\r\n            </div>\r\n\r\n            {/* {Title} */}\r\n\r\n            <div className={styles.safeArea}>\r\n                <Typography className={styles.title}>{recipe?.label}</Typography>\r\n                <div className={styles.details}>\r\n                    <Typography className={styles.detailsLeft}>\r\n                        {recipe?.calories}\r\n                    </Typography>\r\n                    <Typography className={styles.detailsRight}>\r\n                        {recipe?.servings}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n\r\n            {/* {Ingredients} */}\r\n\r\n            <Accordion elevation={0}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls='panel1bh-content'\r\n                    id='panel1bh-header'\r\n                >\r\n                    <Typography variant='h6'>Ingredients</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    {(recipe.ingredients) && <IngredientsList\r\n                        checkable={isFavourite}\r\n                        ingredients={recipe.ingredients}\r\n                        setIngredients={(ingred) => {\r\n                            setIngredients(ingred);\r\n                        }}\r\n                    />}\r\n\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            {/* {Nutrients} */}\r\n\r\n            <Accordion elevation={0}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls='panel1bh-content'\r\n                    id='panel1bh-header'\r\n                >\r\n                    <Typography variant='h6'>Nutrients Info</Typography>\r\n                </AccordionSummary>\r\n                <div className={styles.safeArea}>\r\n                    {recipe?.nutrients?.map((e, key) => {\r\n                        return (\r\n                            <AccordionDetails key={key} className={styles.accordionDetails}>\r\n                                <div className={styles.nutrition}>\r\n                                    <Typography className={styles.detailsLeft}>\r\n                                        {e.label}\r\n                                    </Typography>\r\n                                    <Typography className={styles.detailsRight}>\r\n                                        {e.quantity} {e.unit}\r\n                                    </Typography>\r\n                                </div>\r\n                            </AccordionDetails>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Accordion>\r\n\r\n            {/* Add Favourites button */}\r\n\r\n            <Fab onClick={onFABClick} className={styles.floatingButton} color='secondary'>\r\n                {isFavourite ? <DeleteIcon /> : <FavoriteIcon />}\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginBottom: 50,\r\n        overflowX: 'hidden',\r\n    },\r\n    imageBox: {\r\n        position: 'relative',\r\n        height: 192,\r\n        overflow: 'hidden',\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        margin: 'auto',\r\n        zIndex: -1,\r\n    },\r\n    icons: {\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n    },\r\n    IconLeft: {\r\n        position: 'absolute',\r\n        top: 8,\r\n        left: 0,\r\n        color: 'white',\r\n    },\r\n    IconRight: {\r\n        position: 'absolute',\r\n        top: 8,\r\n        right: 0,\r\n        color: 'white',\r\n    },\r\n    title: {\r\n        fontSize: '1.75em',\r\n        textAlign: 'start',\r\n        fontWeight: 'bold',\r\n        lineHeight: '1.0em',\r\n        paddingTop: '0.5em',\r\n    },\r\n    safeArea: {\r\n        paddingLeft: '1em',\r\n        paddingRight: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    details: {\r\n        paddingTop: '0.5em',\r\n        paddingBottom: '0.5em',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n    },\r\n    nutrition: {\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n    },\r\n    detailsLeft: {\r\n        float: 'left',\r\n        display: 'inline',\r\n        width: '50%',\r\n        textAlign: 'start',\r\n        fontSize: '1em',\r\n    },\r\n    detailsRight: {\r\n        float: 'right',\r\n        display: 'inline',\r\n        width: '50%',\r\n        textAlign: 'end',\r\n        fontSize: '1em',\r\n    },\r\n    description: {\r\n        fontSize: '1em',\r\n        textAlign: 'start',\r\n    },\r\n    floatingButton: {\r\n        position: 'fixed',\r\n        bottom: 16,\r\n        right: 16,\r\n    },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function BottomNavigationBar({ pathname }) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(pathname);\r\n\r\n    const handleChange = (_, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    //Fix for root pathname\r\n    useEffect(() => {\r\n        if (pathname === '' || pathname === 'FUD')\r\n            setValue('search'); //force component rerender\r\n    }, [pathname]);\r\n\r\n    return (\r\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n            <BottomNavigationAction component={Link} to={'/search'} label='Search' value='search' icon={<SearchIcon />} classes={{ label: classes.label, root: classes.button, selected: classes.selected }} />\r\n            <BottomNavigationAction component={Link} to={'/favorites'} label='Favorites' value='favorites' icon={<FavoriteIcon />} classes={{ label: classes.label, root: classes.button, selected: classes.selected }} />\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'sticky',\r\n        bottom: 0,\r\n        width: '100%',\r\n        backgroundColor: '#6200EE',\r\n    },\r\n    button: {\r\n        width: '50%',\r\n        maxWidth: 'none',\r\n        '&$selected': {\r\n            color: 'white',\r\n        },\r\n    },\r\n    label: {\r\n        color: 'white',\r\n    },\r\n    selected: {\r\n\r\n    }\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//title: string,\r\n//subtitle: string\r\n//onClick: () => void \r\n//image: string, link to an image or image object (more info at https://material-ui.com/api/card-media/)\r\nexport default function RecipeCard ({ title, subTitle, image, onClick }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} \r\n            onClick={() => {onClick()}}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={image}\r\n                    title={title}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant='h6' align='left' noWrap={true}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant='body2' align='left'>\r\n                        {subTitle}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: 'fit-content',\r\n    },\r\n    media: {\r\n        height: 194,\r\n    },\r\n});\r\n","// Custom App Bar with a 'Recipes' title and clickable SearchIcon,\r\n// which is responsible for showing Search Bar. The component has\r\n// been implemented on the basis of: https://material-ui.com/components/app-bar/\r\n\r\nimport React, { useRef, useState } from 'react';\r\nimport { IconButton, AppBar, Toolbar, Typography, InputBase, makeStyles } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nexport default function CustomAppBar({ onSearch, canSearch }) {\r\n    const styles = useStyles();\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [canClear, setCanClear] = useState(false);\r\n    \r\n    // Searchbar's value:\r\n    const searchBarInput = useRef('');\r\n\r\n    // Reacting for clicking search button in search bar:\r\n    const searchButtonEvent = () => onSearch(searchBarInput.current.value);\r\n\r\n    // Handle with clicking \"Enter\":\r\n    const keyPress = (e) => {\r\n        if (e.keyCode === 13) {\r\n            e.target.blur();\r\n            onSearch(searchBarInput.current.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <AppBar position='static' className={styles.appBar}>\r\n            {isSearching \r\n            ?\r\n            <Toolbar> \r\n                <IconButton className={styles.backButton} \r\n                            onClick={() => { \r\n                                setIsSearching(false); \r\n                                setCanClear(false);\r\n                                }}>\r\n                    <ArrowBackIcon/>\r\n                </IconButton>\r\n                {/* Searchbar */}\r\n                <div className={styles.searchBar}>\r\n                    {/* Search */}\r\n                    <IconButton className={styles.searchBarButton} \r\n                                onClick={searchButtonEvent}>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                    {/* Input */}\r\n                    <InputBase placeholder='Search for recipe'\r\n                               inputRef={searchBarInput}\r\n                               onChange={(input) => setCanClear(input.target.value.length > 0)}\r\n                               className={styles.searchBarInput}\r\n                               onKeyDown={keyPress}/>\r\n                    {/* Clear */}\r\n                    {canClear\r\n                    ? \r\n                    <IconButton className={styles.searchBarButton} \r\n                                onClick={() => { \r\n                                    searchBarInput.current.value = ''; \r\n                                    setCanClear(false);\r\n                                }}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                    :\r\n                    <></>\r\n                    }\r\n                </div>\r\n            </Toolbar>\r\n            :\r\n            <Toolbar> {/* Title + button */}\r\n                <Typography className={styles.title}>Recipes</Typography>\r\n                {canSearch &&\r\n                <IconButton className={styles.searchButton} \r\n                            onClick={() => { setIsSearching(true); }}>\r\n                    <SearchIcon/>\r\n                </IconButton>\r\n                }\r\n            </Toolbar>\r\n            }\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    // Both variants:\r\n    root: {\r\n        position: 'sticky',\r\n        top: 0,\r\n        zIndex: 9999,\r\n    },\r\n    appBar: { \r\n        backgroundColor: '#6200EE', \r\n    },\r\n\r\n    // AppBar variant:\r\n    title: { \r\n        width: '100%', \r\n        textAlign: 'left', \r\n        color: 'rgba(255, 255, 255, 0.75)',\r\n        fontSize: '1.25em',\r\n        userSelect: 'none',\r\n    },\r\n    searchButton: { \r\n        padding: 0, \r\n        color: 'rgba(255, 255, 255, 0.75)',\r\n    },\r\n\r\n    // SearchBar variant:\r\n    backButton: {\r\n        paddingLeft: 0, \r\n        color: 'rgba(255, 255, 255, 0.75)',\r\n    },\r\n    searchBar: { \r\n        borderRadius: 4, \r\n        backgroundColor: 'rgba(255, 255, 255, 0.75)', \r\n        width: '100%', \r\n        display: 'flex',\r\n    },\r\n    searchBarButton: { \r\n        paddingTop: 0, \r\n        paddingBottom: 0, \r\n        paddingLeft: '1%', \r\n        paddingRight: '1%',\r\n        color: 'rgba(0, 0, 0, 0.75)',\r\n    },\r\n    searchBarInput: {\r\n        width: '100%',\r\n        fontSize: '1.25em',\r\n        lineHeight: '1.5em',\r\n    },\r\n});\r\n  ","import { makeStyles } from '@material-ui/core/styles';\r\nimport * as storage from '../utils/storage';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport CustomAppBar from '../components/CustomAppBar';\r\n\r\nexport default function FavoritePage() {\r\n    const classes = useStyles();\r\n    const favs = storage.getItem('favourites');\r\n    const history = useHistory();\r\n\r\n    const OnClickItem = (item) => {\r\n        let lastSegment = item.uri.split(\"#\").pop();\r\n        history.push({ pathname: '/recipeDetails/' + lastSegment, state: { recipe: item } });\r\n    }\r\n\r\n    const createRecipeDetails = () => {\r\n        if (favs === null)\r\n            return [];\r\n        var result = [];\r\n        for (let key in favs) {\r\n            let val = favs[key];\r\n            result.push(\r\n                <Grid item xs={6} sm={4} md={3} lg={2} key={val.url}>\r\n                    <RecipeCard\r\n                        title={val.label} subTitle={val.calories}\r\n                        image={val.image} key={val.url}\r\n                        onClick={() => OnClickItem(val)} />\r\n                </Grid>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAppBar canSearch={false}/>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={1} justify='center'>\r\n                    {createRecipeDetails()}\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: 8,\r\n        minHeight: '100vh',\r\n    },\r\n});\r\n","//Get's nth origin url segment\r\nexport function getPathnameSegment(n) {\r\n    let arr = window.location.pathname.split('/');\r\n    return arr[n];\r\n}\r\n","import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport CustomAppBar from '../components/CustomAppBar';\r\nimport { downloadRecipesQuery } from '../data/RecipeSearchData';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getPathnameSegment } from '../utils/urlUtils';\r\n\r\n//Global state for search page\r\nvar lastFetchCache = [];\r\n\r\nexport default function SearchPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [recipes, setRecipes] = useState(lastFetchCache);\r\n    const [phrase, setPhrase] = useState(getPathnameSegment(3));\r\n\r\n    const fetchRecipes = () => {\r\n        let p = phrase\r\n        if (p === undefined || p === null || p.length === 0) {\r\n            p = 'shrimp';\r\n        }\r\n\r\n        downloadRecipesQuery(p, 0, 50)\r\n            .then(recipes => {\r\n                if (recipes === undefined) console.log('Failed to fetch (wrong keys?)');\r\n                else {\r\n                    setRecipes(recipes);\r\n                    lastFetchCache = recipes;\r\n                }\r\n            })\r\n    }\r\n\r\n    //Fetch data on mount, only if cache does not contain anything\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (recipes.length === 0)\r\n            fetchRecipes();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    //Prevent the following effect, from running on mount\r\n    const isMounted = useRef(false);\r\n    //Fetch new data, when phrase changes\r\n    useEffect(() => {\r\n        if (isMounted.current === true) {\r\n            fetchRecipes();\r\n        }\r\n        else {\r\n            isMounted.current = true;\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [phrase]);\r\n\r\n    const OnSearchClick = (input) => {\r\n        history.replace({ pathname: '/search/' + input });\r\n        setPhrase(input);\r\n    }\r\n\r\n    const OnClickItem = (item) => {\r\n        let parts = item.uri.split(\"#\").pop();\r\n        history.push({\r\n            pathname: \"/recipeDetails/\" + parts,\r\n            state: { recipe: item },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <CustomAppBar canSearch={true} onSearch={input => OnSearchClick(input)} />\r\n            <div className={classes.root}>\r\n                <Grid container spacing={1} justify='center'>\r\n                    {recipes.map(recipe =>\r\n                        <Grid item xs={6} sm={4} md={3} lg={2} key={recipe.url}>\r\n                            <RecipeCard\r\n                                title={recipe.label} subTitle={recipe.calories}\r\n                                image={recipe.image} key={recipe.url}\r\n                                onClick={() => OnClickItem(recipe)} />\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: 8,\r\n        minHeight: '100vh',\r\n    },\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport BottomNavigationBar from '../components/BottomNavigation';\r\nimport FavoritePage from './FavoritePage';\r\nimport SearchPage from './SearchPage';\r\nimport { getPathnameSegment } from '../utils/urlUtils';\r\n\r\nexport default function MainPages() {\r\n    const pathname = getPathnameSegment(2);\r\n\r\n    return (\r\n        <Fragment>\r\n            { pathname === 'favorites' ? <FavoritePage /> : <SearchPage />}\r\n            <BottomNavigationBar pathname={pathname} />\r\n        </Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport RecipeDetails from './pages/RecipeDetails';\r\nimport MainPages from './pages/MainPages';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router basename=\"/FUD\">\r\n      <div className='App'>\r\n        <Switch>\r\n          <Route path='/recipeDetails' component={RecipeDetails} />\r\n          <Route path='/' component={MainPages} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './utils/serviceWorkerRegistration';\r\nimport reportWebVitals from './utils/reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals())\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}