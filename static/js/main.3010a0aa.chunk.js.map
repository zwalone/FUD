{"version":3,"sources":["components/IngredientListItem.jsx","components/IngredientsList.jsx","utils/storage.js","data/PreparingJSONs.js","data/Settings.js","data/RecipeSearchData.js","pages/RecipeDetails.js","components/BottomNavigation.js","components/RecipeCard.js","components/CustomAppBar.js","pages/FavoritePage.js","utils/urlUtils.js","pages/SearchPage.js","pages/MainPages.js","App.js","utils/serviceWorkerRegistration.js","utils/reportWebVitals.js","index.js"],"names":["PurpleCheckBox","styled","Checkbox","IngredientListItem","checkable","ingredient","setChecked","classes","useClasses","className","root","checked","onChange","checkBox","nameCheckable","name","makeStyles","display","flexDirection","paddingRight","alignItems","textAlign","fontSize","paddingLeft","paddingTop","paddingBottom","IngredientsList","ingredients","setIngredients","map","style","width","i","storage","window","localStorage","getItem","key","item","JSON","parse","error","setItem","serializedItem","stringify","prepareNutrientsArray","json","result","push","label","quantity","Math","round","unit","appID","process","appKey","downloadRecipesQuery","query","from","to","fetch","then","response","jsons","hits","length","uri","recipe","image","calories","url","servings","yield","ingredientLines","nutrients","totalNutrients","catch","console","log","downloadRecipeByID","ID","Accordion","withStyles","backgroundColor","margin","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","RecipeDetails","history","useHistory","styles","useStyles","useState","location","state","setRecipe","favs","undefined","isFavouriteInit","isFavourite","setIsFavourite","useEffect","n","href","search","slice","x","container","imageBox","icons","Button","onClick","goBack","IconLeft","IconRight","src","alt","safeArea","Typography","title","details","detailsLeft","detailsRight","elevation","expandIcon","aria-controls","id","variant","ingred","e","accordionDetails","nutrition","Fab","floatingButton","color","marginBottom","overflowX","position","height","overflow","top","bottom","left","right","zIndex","justifyContent","fontWeight","lineHeight","float","description","BottomNavigationBar","pathname","value","setValue","BottomNavigation","_","newValue","BottomNavigationAction","component","Link","icon","button","selected","maxWidth","RecipeCard","subTitle","Card","CardActionArea","CardMedia","media","CardContent","align","noWrap","CustomAppBar","onSearch","canSearch","isSearching","setIsSearching","canClear","setCanClear","searchBarInput","useRef","AppBar","appBar","Toolbar","IconButton","backButton","searchBar","searchBarButton","current","InputBase","placeholder","inputRef","input","target","searchButton","userSelect","padding","borderRadius","FavoritePage","Grid","spacing","justify","val","xs","sm","md","lg","parts","split","lastSegment","pop","OnClickItem","createRecipeDetails","getPathnameSegment","lastFetchCache","SearchPage","recipes","setRecipes","phrase","setPhrase","fetchRecipes","p","isMounted","replace","OnSearchClick","escape","MainPages","App","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3010a0aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst PurpleCheckBox = styled(Checkbox)`\r\n            color: #6200EE !important;\r\n            backgroundColor: #6200EE !important;\r\n`\r\n\r\nexport function IngredientListItem({checkable,ingredient, setChecked}) {\r\n    const classes = useClasses();\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n        {checkable && (\r\n          <>\r\n            <PurpleCheckBox\r\n              checked={ingredient.checked}\r\n              onChange={() => {\r\n                setChecked();\r\n              }}\r\n              className={classes.checkBox}\r\n            />\r\n            <div className={classes.nameCheckable}>{ingredient.name}</div>\r\n          </>\r\n        )}\r\n        {!checkable && (\r\n          <div className={classes.name}>{ingredient.name}</div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst useClasses = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  checkBox: {\r\n    paddingRight: '0.5em',\r\n  },\r\n  nameCheckable: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'left',\r\n    fontSize: '1em',\r\n  },\r\n  name: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'left',\r\n    fontSize: '1em',\r\n    paddingLeft: '1em',\r\n    paddingTop: '0.5em',\r\n    paddingBottom: '0.5em',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { IngredientListItem } from './IngredientListItem';\r\n\r\nexport function IngredientsList({ ingredients, setIngredients, checkable }) {\r\n  const setChecked = (i) => {\r\n    ingredients[i].checked = !ingredients[i].checked;\r\n    setIngredients([...ingredients]);\r\n  };\r\n\r\n  if (!checkable) {\r\n    ingredients = ingredients?.map((ingredient) => {\r\n      return { name: ingredient, checked: false };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      {ingredients?.map((ingredient, i) => (\r\n        <IngredientListItem\r\n          setChecked={() => {\r\n            setChecked(i);\r\n          }}\r\n          checkable={checkable}\r\n          ingredient={ingredient}\r\n          key={i}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","const storage = window.localStorage;\r\n\r\n///Gets an object or string for the given key from localStorage\r\nexport function getItem(key) {\r\n    var item = storage.getItem(key)\r\n    if (item === null)\r\n        return null;\r\n\r\n    //Try parsing, if failed return normal string\r\n    try {\r\n        return JSON.parse(item)\r\n    }\r\n    catch (error) {\r\n        return item;\r\n    }\r\n}\r\n\r\n///Sets an object or string for the given key from localStorage\r\nexport function setItem(key, item) {\r\n    var serializedItem = item\r\n    if (typeof item !== 'string') {\r\n        serializedItem = JSON.stringify(item) //ASK: throw an exception on failure? \r\n    }\r\n    storage.setItem(key, serializedItem);\r\n}\r\n\r\nexport function removeItem(key) {\r\n    storage.removeItem(key)\r\n}\r\n","// Removing unnecessary data and creating custom objects:\r\nexport const prepareCustomJSONs = (jsons) => {\r\n    // No recipe has been found:\r\n    if (jsons.length === 0) return 'No results';\r\n\r\n    // Some recipes have been found:\r\n    return jsons.map(json => ({\r\n        uri: json.recipe.uri,\r\n        label: json.recipe.label,\r\n        image: json.recipe.image,\r\n        calories: Math.round(json.recipe.calories) + ' kcal',\r\n        url: json.recipe.url,\r\n        servings: json.recipe.yield + ' servings',\r\n        ingredients: json.recipe.ingredientLines,\r\n        nutrients: prepareNutrientsArray(json.recipe.totalNutrients)\r\n    }));\r\n}\r\n\r\n//We need this function because API returns different structure, depending on q or r param\r\nexport const prepareCustomJSONsFromID = (jsons) => {\r\n    // No recipe has been found:\r\n    if (jsons.length === 0) return 'No results';\r\n\r\n    // Some recipes have been found:\r\n    return jsons.map(json => ({\r\n        uri: json.uri,\r\n        label: json.label,\r\n        image: json.image,\r\n        calories: Math.round(json.calories) + ' kcal',\r\n        url: json.url,\r\n        servings: json.yield + ' servings',\r\n        ingredients: json.ingredientLines,\r\n        nutrients: prepareNutrientsArray(json.totalNutrients)\r\n    }))[0];\r\n}\r\n\r\n// Converting JSON object into array of JSON objects (its keys):\r\nconst prepareNutrientsArray = (json) => {\r\n    var result = [];\r\n    for (var key in json)\r\n        result.push({\r\n            label: json[key].label,\r\n            quantity: Math.round(json[key].quantity * 1000) / 1000,\r\n            unit: json[key].unit\r\n        });\r\n    return result;\r\n}\r\n","export const appID = process.env.REACT_APP_appID; //Edamam app ID\r\nexport const appKey = process.env.REACT_APP_appKey;  //Edamam app key\r\n","// This file contains method responsible for communicating with EDAMAM's Recipe \r\n// Search API (documentation: https://developer.edamam.com/edamam-docs-recipe-api)\r\n\r\nimport { prepareCustomJSONs, prepareCustomJSONsFromID } from './PreparingJSONs';\r\nimport { appKey, appID } from './Settings';\r\n\r\n// List of recipes:\r\nexport const downloadRecipesQuery = (query, from, to) => {\r\n  return fetch(`https://api.edamam.com/search?app_id=${appID}`\r\n    + `&app_key=${appKey}&q=${query}&from=${from}&to=${to}`)\r\n    .then(response => response.json())\r\n    .then(json => prepareCustomJSONs(json.hits))\r\n    .catch(error => console.log(error));\r\n};\r\n\r\n\r\n// List of recipes:\r\nexport const downloadRecipeByID = (ID) => {\r\n  return fetch(`https://api.edamam.com/search?app_id=${appID}`\r\n    + `&app_key=${appKey}&r=${ID}`)\r\n    .then(response => response.json())\r\n    .then(json => prepareCustomJSONsFromID(json))\r\n    .catch(error => console.log(error));\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Accordion as MuiAccordion,\r\n    Typography,\r\n    AccordionSummary as MuiAccordionSummary,\r\n    AccordionDetails as MuiAccordionDetails,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IngredientsList } from '../components/IngredientsList';\r\nimport * as storage from '../utils/storage';\r\nimport { downloadRecipeByID } from '../data/RecipeSearchData';\r\n\r\nconst Accordion = withStyles({\r\n    root: {\r\n        '&:before': {\r\n            backgroundColor: 'white',\r\n        },\r\n        '&$expanded': {\r\n            margin: 0,\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        '&$expanded': {\r\n            minHeight: 0,\r\n        },\r\n    },\r\n    content: {\r\n        margin: 0,\r\n        '&$expanded': {\r\n            margin: 0,\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles({\r\n    root: {\r\n        paddingRight: '1em',\r\n        paddingLeft: '1em',\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n})(MuiAccordionDetails);\r\n\r\n//returns false if recipe is not found in the favourites dictionary\r\n//otherwise true\r\nconst isFavouriteInit = (recipe) => {\r\n    let favs = storage.getItem('favourites');\r\n    if (favs === null)\r\n        return false;\r\n    return favs[recipe?.uri] !== undefined;\r\n}\r\n\r\nexport default function RecipeDetails() {\r\n    const history = useHistory();\r\n    const styles = useStyles();\r\n    const [recipe, setRecipe] = useState(history?.location?.state?.recipe);\r\n    const [ingredients, setIngredients] = useState(recipe?.ingredients);\r\n    const [isFavourite, setIsFavourite] = useState(isFavouriteInit(recipe));\r\n\r\n    useEffect(() => {\r\n        if (recipe === undefined) {\r\n            //fetch recipe using URL\r\n            let n = window.location.href.search('recipeDetails') + 'recipeDetails'.length + 1;\r\n            let uri = window.location.href.slice(n);\r\n            downloadRecipeByID(uri).then(x => {\r\n                setRecipe(x);\r\n            });\r\n        }\r\n    }, [recipe])\r\n\r\n    const onFABClick = () => {\r\n        let favs = storage.getItem('favourites');\r\n        if (favs === null)\r\n            storage.setItem('favourites', {}); //create a new favourites dictionary if one does not exist\r\n        //use dict to reduce lookup time to O(1)\r\n        if (favs[recipe.uri] !== undefined) {\r\n            delete favs[recipe.uri] //if recipe is already in the dictionary\r\n            setIsFavourite(false);\r\n            //remove it.\r\n        } else {\r\n            favs[recipe.uri] = recipe; //otherwise add it \r\n            setIsFavourite(true);\r\n        }\r\n        storage.setItem('favourites', favs); //update item after modification\r\n    }\r\n\r\n    const OnClickClose = () => {\r\n        history.goBack(); //TODO: handle going back in invalid state\r\n    };\r\n\r\n    if (recipe === null || recipe === undefined) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* {Image & icons} */}\r\n\r\n            <div className={styles.imageBox}>\r\n                <div className={styles.icons}>\r\n                    <Button onClick={() => OnClickClose()} className={styles.IconLeft}>\r\n                        <CloseIcon />\r\n                    </Button>\r\n                    <Button href={`${recipe?.url}`} className={styles.IconRight}>\r\n                        <LinkIcon />\r\n                    </Button>\r\n                </div>\r\n                <img className={styles.image} src={recipe?.image} alt='recipe' />\r\n            </div>\r\n\r\n            {/* {Title} */}\r\n\r\n            <div className={styles.safeArea}>\r\n                <Typography className={styles.title}>{recipe?.label}</Typography>\r\n                <div className={styles.details}>\r\n                    <Typography className={styles.detailsLeft}>\r\n                        {recipe?.calories}\r\n                    </Typography>\r\n                    <Typography className={styles.detailsRight}>\r\n                        {recipe?.servings}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n\r\n            {/* {Ingredients} */}\r\n\r\n            <Accordion elevation={0}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls='panel1bh-content'\r\n                    id='panel1bh-header'\r\n                >\r\n                    <Typography variant='h6'>Ingredients</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    {(recipe?.ingredients !== undefined) ? <IngredientsList\r\n                        ingredients={ingredients}\r\n                        setIngredients={(ingred) => {\r\n                            setIngredients(ingred);\r\n                        }}\r\n                    /> : null}\r\n\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            {/* {Nutrients} */}\r\n\r\n            <Accordion elevation={0}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls='panel1bh-content'\r\n                    id='panel1bh-header'\r\n                >\r\n                    <Typography variant='h6'>Nutrients Info</Typography>\r\n                </AccordionSummary>\r\n                <div className={styles.safeArea}>\r\n                    {recipe?.nutrients?.map((e, key) => {\r\n                        return (\r\n                            <AccordionDetails key={key} className={styles.accordionDetails}>\r\n                                <div className={styles.nutrition}>\r\n                                    <Typography className={styles.detailsLeft}>\r\n                                        {e.label}\r\n                                    </Typography>\r\n                                    <Typography className={styles.detailsRight}>\r\n                                        {e.quantity} {e.unit}\r\n                                    </Typography>\r\n                                </div>\r\n                            </AccordionDetails>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Accordion>\r\n\r\n            {/* Add Favorites button */}\r\n\r\n            <Fab onClick={onFABClick} className={styles.floatingButton} color='secondary'>\r\n                {isFavourite ? <DeleteIcon /> : <FavoriteIcon />}\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginBottom: 50,\r\n        overflowX: 'hidden',\r\n    },\r\n    imageBox: {\r\n        position: 'relative',\r\n        height: 192,\r\n        overflow: 'hidden',\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        margin: 'auto',\r\n        zIndex: -1,\r\n    },\r\n    icons: {\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n    },\r\n    IconLeft: {\r\n        position: 'absolute',\r\n        top: 8,\r\n        left: 0,\r\n        color: 'white',\r\n    },\r\n    IconRight: {\r\n        position: 'absolute',\r\n        top: 8,\r\n        right: 0,\r\n        color: 'white',\r\n    },\r\n    title: {\r\n        fontSize: '1.75em',\r\n        textAlign: 'start',\r\n        fontWeight: 'bold',\r\n        lineHeight: '1.0em',\r\n        paddingTop: '0.5em',\r\n    },\r\n    safeArea: {\r\n        paddingLeft: '1em',\r\n        paddingRight: '1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    details: {\r\n        paddingTop: '0.5em',\r\n        paddingBottom: '0.5em',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n    },\r\n    nutrition: {\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n    },\r\n    detailsLeft: {\r\n        float: 'left',\r\n        display: 'inline',\r\n        width: '50%',\r\n        textAlign: 'start',\r\n        fontSize: '1em',\r\n    },\r\n    detailsRight: {\r\n        float: 'right',\r\n        display: 'inline',\r\n        width: '50%',\r\n        textAlign: 'end',\r\n        fontSize: '1em',\r\n    },\r\n    description: {\r\n        fontSize: '1em',\r\n        textAlign: 'start',\r\n    },\r\n    floatingButton: {\r\n        position: 'fixed',\r\n        bottom: 16,\r\n        right: 16,\r\n    },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function BottomNavigationBar({ pathname }) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(pathname);\r\n\r\n    const handleChange = (_, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    //Fix for root pathname\r\n    useEffect(() => {\r\n        if (pathname === '')\r\n            setValue('search'); //force component rerender\r\n    }, [pathname]);\r\n\r\n    return (\r\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n            <BottomNavigationAction component={Link} to={'/search'} label='Search' value='search' icon={<SearchIcon />} classes={{ label: classes.label, root: classes.button, selected: classes.selected }} />\r\n            <BottomNavigationAction component={Link} to={'/favorites'} label='Favorites' value='favorites' icon={<FavoriteIcon />} classes={{ label: classes.label, root: classes.button, selected: classes.selected }} />\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'sticky',\r\n        bottom: 0,\r\n        width: '100%',\r\n        backgroundColor: '#6200EE',\r\n    },\r\n    button: {\r\n        width: '50%',\r\n        maxWidth: 'none',\r\n        '&$selected': {\r\n            color: 'white',\r\n        },\r\n    },\r\n    label: {\r\n        color: 'white',\r\n    },\r\n    selected: {\r\n\r\n    }\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//title: string,\r\n//subtitle: string\r\n//onClick: () => void \r\n//image: string, link to an image or image object (more info at https://material-ui.com/api/card-media/)\r\nexport default function RecipeCard ({ title, subTitle, image, onClick }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} \r\n            onClick={() => {onClick()}}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={image}\r\n                    title={title}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant='h6' align='left' noWrap={true}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant='body2' align='left'>\r\n                        {subTitle}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        height: 'fit-content',\r\n    },\r\n    media: {\r\n        height: 194,\r\n    },\r\n});\r\n","// Custom App Bar with a 'Recipes' title and clickable SearchIcon,\r\n// which is responsible for showing Search Bar. The component has\r\n// been implemented on the basis of: https://material-ui.com/components/app-bar/\r\n\r\nimport React, { useRef, useState } from 'react';\r\nimport { IconButton, AppBar, Toolbar, Typography, InputBase, makeStyles } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nexport default function CustomAppBar({ onSearch, canSearch }) {\r\n    const styles = useStyles();\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [canClear, setCanClear] = useState(false);\r\n    \r\n    // Searchbar's value:\r\n    const searchBarInput = useRef('');\r\n\r\n    // Reacting for clicking search button in search bar:\r\n    const searchButtonEvent = () => onSearch(searchBarInput.current.value);\r\n    \r\n    return (\r\n        <div className={styles.root}>\r\n            <AppBar position='static' className={styles.appBar}>\r\n            {isSearching \r\n            ?\r\n            <Toolbar> \r\n                <IconButton className={styles.backButton} \r\n                            onClick={() => { \r\n                                setIsSearching(false); \r\n                                setCanClear(false);\r\n                                }}>\r\n                    <ArrowBackIcon/>\r\n                </IconButton>\r\n                {/* Searchbar */}\r\n                <div className={styles.searchBar}>\r\n                    {/* Search */}\r\n                    <IconButton className={styles.searchBarButton} \r\n                                onClick={searchButtonEvent}>\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                    {/* Input */}\r\n                    <InputBase placeholder='Search for recipe'\r\n                               inputRef={searchBarInput}\r\n                               onChange={(input) => setCanClear(input.target.value.length > 0)}\r\n                               className={styles.searchBarInput}/>\r\n                    {/* Clear */}\r\n                    {canClear\r\n                    ? \r\n                    <IconButton className={styles.searchBarButton} \r\n                                onClick={() => { \r\n                                    searchBarInput.current.value = ''; \r\n                                    setCanClear(false);\r\n                                }}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                    :\r\n                    <></>\r\n                    }\r\n                </div>\r\n            </Toolbar>\r\n            :\r\n            <Toolbar> {/* Title + button */}\r\n                <Typography className={styles.title}>Recipes</Typography>\r\n                {canSearch &&\r\n                <IconButton className={styles.searchButton} \r\n                            onClick={() => { setIsSearching(true); }}>\r\n                    <SearchIcon/>\r\n                </IconButton>\r\n                }\r\n            </Toolbar>\r\n            }\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    // Both variants:\r\n    root: {\r\n        position: 'sticky',\r\n        top: 0,\r\n        zIndex: 9999,\r\n    },\r\n    appBar: { \r\n        backgroundColor: '#6200EE', \r\n    },\r\n\r\n    // AppBar variant:\r\n    title: { \r\n        width: '100%', \r\n        textAlign: 'left', \r\n        color: 'rgba(255, 255, 255, 0.75)',\r\n        fontSize: '1.25em',\r\n        userSelect: 'none',\r\n    },\r\n    searchButton: { \r\n        padding: 0, \r\n        color: 'rgba(255, 255, 255, 0.75)',\r\n    },\r\n\r\n    // SearchBar variant:\r\n    backButton: {\r\n        paddingLeft: 0, \r\n        color: 'rgba(255, 255, 255, 0.75)',\r\n    },\r\n    searchBar: { \r\n        borderRadius: 4, \r\n        backgroundColor: 'rgba(255, 255, 255, 0.75)', \r\n        width: '100%', \r\n        display: 'flex',\r\n    },\r\n    searchBarButton: { \r\n        paddingTop: 0, \r\n        paddingBottom: 0, \r\n        paddingLeft: '1%', \r\n        paddingRight: '1%',\r\n        color: 'rgba(0, 0, 0, 0.75)',\r\n    },\r\n    searchBarInput: {\r\n        width: '100%',\r\n        fontSize: '1.25em',\r\n        lineHeight: '1.5em',\r\n    },\r\n});\r\n  ","import { makeStyles } from '@material-ui/core/styles';\r\nimport * as storage from '../utils/storage';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport CustomAppBar from '../components/CustomAppBar';\r\n\r\nexport default function FavoritePage() {\r\n    const classes = useStyles();\r\n    const favs = storage.getItem('favourites');\r\n    const history = useHistory();\r\n\r\n    const OnClickItem = (item) => {\r\n        let parts = item.uri.split('/');\r\n        let lastSegment = parts.pop() || parts.pop(); //handle trailing slashes\r\n        history.push({ pathname: '/recipeDetails/' + lastSegment, state: { recipe: item } });\r\n    }\r\n\r\n    const createRecipeDetails = () => {\r\n        if (favs === null)\r\n            return [];\r\n        var result = [];\r\n        for (let key in favs) {\r\n            let val = favs[key];\r\n            result.push(\r\n                <Grid item xs={6} sm={4} md={3} lg={2} key={val.url}>\r\n                    <RecipeCard\r\n                        title={val.label} subTitle={val.calories}\r\n                        image={val.image} key={val.url}\r\n                        onClick={() => OnClickItem(val)} />\r\n                </Grid>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAppBar canSearch={false}/>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={1} justify='center'>\r\n                    {createRecipeDetails()}\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: 8,\r\n        minHeight: '100vh',\r\n    },\r\n});\r\n","//Get's nth origin url segment\r\nexport function getPathnameSegment(n) {\r\n    let arr = window.location.pathname.split('/');\r\n    return arr[n];\r\n}\r\n","import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport CustomAppBar from '../components/CustomAppBar';\r\nimport { downloadRecipesQuery } from '../data/RecipeSearchData';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getPathnameSegment } from '../utils/urlUtils';\r\n\r\n//Global state for search page\r\nvar lastFetchCache = [];\r\n\r\nexport default function SearchPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [recipes, setRecipes] = useState(lastFetchCache);\r\n    const [phrase, setPhrase] = useState(getPathnameSegment(2)); //TODO: use query string\r\n\r\n    const fetchRecipes = () => {\r\n        let p = phrase\r\n        if (p === undefined || p === null || p.length === 0) {\r\n            p = 'shrimp';\r\n        }\r\n\r\n        downloadRecipesQuery(p, 0, 100)\r\n            .then(recipes => {\r\n                if (recipes === undefined) console.log('Failed to fetch (wrong keys?)');\r\n                else {\r\n                    setRecipes(recipes);\r\n                    lastFetchCache = recipes;\r\n                }\r\n            })\r\n    }\r\n\r\n    //Fetch data on mount, only if cache does not contain anything\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (recipes.length === 0)\r\n            fetchRecipes();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    //Prevent the following effect, from running on mount\r\n    const isMounted = useRef(false);\r\n    //Fetch new data, when phrase changes\r\n    useEffect(() => {\r\n        if (isMounted.current === true) {\r\n            fetchRecipes();\r\n        }\r\n        else {\r\n            isMounted.current = true;\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [phrase]);\r\n\r\n    const OnSearchClick = (input) => {\r\n        history.replace({ pathname: '/search/' + input });\r\n        setPhrase(input);\r\n    }\r\n\r\n    const OnClickItem = (item) => {\r\n        history.push({ pathname: '/recipeDetails/' + escape(item.uri), state: { recipe: item } });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <CustomAppBar canSearch={true} onSearch={input => OnSearchClick(input)} />\r\n            <div className={classes.root}>\r\n                <Grid container spacing={1} justify='center'>\r\n                    {recipes.map(recipe =>\r\n                        <Grid item xs={6} sm={4} md={3} lg={2} key={recipe.url}>\r\n                            <RecipeCard\r\n                                title={recipe.label} subTitle={recipe.calories}\r\n                                image={recipe.image} key={recipe.url}\r\n                                onClick={() => OnClickItem(recipe)} />\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: 8,\r\n        minHeight: '100vh',\r\n    },\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport BottomNavigationBar from '../components/BottomNavigation';\r\nimport FavoritePage from './FavoritePage';\r\nimport SearchPage from './SearchPage';\r\nimport { getPathnameSegment } from '../utils/urlUtils';\r\n\r\nexport default function MainPages() {\r\n    const pathname = getPathnameSegment(1);\r\n\r\n    return (\r\n        <Fragment>\r\n            { pathname === 'favorites' ? <FavoritePage /> : <SearchPage /> }\r\n            <BottomNavigationBar pathname={pathname} />\r\n        </Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport RecipeDetails from './pages/RecipeDetails';\r\nimport MainPages from './pages/MainPages';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Switch>\r\n          <Route path='/recipeDetails' component={RecipeDetails} />\r\n          <Route path='/' component={MainPages} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './utils/serviceWorkerRegistration';\r\nimport reportWebVitals from './utils/reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}