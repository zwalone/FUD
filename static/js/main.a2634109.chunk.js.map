{"version":3,"sources":["components/IngredientListItem.jsx","components/IngredientsList.jsx","utils/storage.js","data/PreparingJSONs.js","data/Settings.js","data/RecipeSearchData.js","pages/RecipeDetails.js","components/BottomNavigation.js","components/RecipeCard.js","components/CustomAppBar.js","pages/FavoritePage.js","utils/urlUtils.js","pages/SearchPage.js","pages/MainPages.js","App.js","utils/serviceWorkerRegistration.js","utils/reportWebVitals.js","index.js"],"names":["PurpleCheckBox","styled","Checkbox","IngredientListItem","checkable","ingredient","setChecked","classes","useClasses","className","root","checked","onChange","checkBox","nameCheckable","name","makeStyles","display","flexDirection","paddingRight","alignItems","textAlign","fontSize","paddingLeft","paddingTop","paddingBottom","IngredientsList","ingredients","setIngredients","map","style","width","i","storage","window","localStorage","getItem","key","item","JSON","parse","error","setItem","serializedItem","stringify","getAll","get","uri","t","Favourites","obj","favs","ingred","uriOrObj","prepareNutrientsArray","json","result","push","label","quantity","Math","round","unit","appID","process","appKey","downloadRecipesQuery","query","from","to","fetch","then","response","jsons","hits","length","recipe","image","calories","url","servings","yield","ingredientLines","nutrients","totalNutrients","catch","console","log","downloadRecipeByID","ID","Accordion","withStyles","backgroundColor","margin","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","RecipeDetails","history","useHistory","styles","useStyles","useState","location","state","isFavourite","setIsFavourite","setRecipe","loadRecipe","useCallback","a","x","useEffect","n","href","search","slice","undefined","container","imageBox","icons","Button","onClick","goBack","IconLeft","IconRight","src","alt","safeArea","Typography","title","details","detailsLeft","detailsRight","elevation","expandIcon","aria-controls","id","variant","ingreds","rec","e","accordionDetails","nutrition","Fab","floatingButton","color","marginBottom","overflowX","position","height","overflow","top","bottom","left","right","zIndex","justifyContent","fontWeight","lineHeight","float","description","BottomNavigationBar","pathname","p","BottomNavigation","value","BottomNavigationAction","component","Link","icon","button","selected","maxWidth","RecipeCard","subTitle","Card","CardActionArea","CardMedia","media","CardContent","align","noWrap","CustomAppBar","onSearch","canSearch","isSearching","setIsSearching","canClear","setCanClear","searchBarInput","useRef","AppBar","appBar","Toolbar","IconButton","backButton","searchBar","searchBarButton","current","InputBase","placeholder","inputRef","input","target","onKeyDown","keyCode","blur","searchButton","userSelect","padding","borderRadius","FavoritePage","Grid","spacing","justify","val","xs","sm","md","lg","lastSegment","split","pop","OnClickItem","createRecipeDetails","getPathnameSegment","lastFetchCache","SearchPage","recipes","setRecipes","phrase","setPhrase","fetchRecipes","isMounted","replace","OnSearchClick","parts","MainPages","App","basename","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a2634109.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst PurpleCheckBox = styled(Checkbox)`\n            color: #6200EE !important;\n            backgroundColor: #6200EE !important;\n`\n\nexport function IngredientListItem({checkable,ingredient, setChecked}) {\n    const classes = useClasses();\n    \n    return (\n      <div className={classes.root}>\n        {checkable && (\n          <>\n            <PurpleCheckBox\n              checked={ingredient.checked}\n              onChange={() => {\n                setChecked();\n              }}\n              className={classes.checkBox}\n            />\n            <div className={classes.nameCheckable}>{ingredient.name}</div>\n          </>\n        )}\n        {!checkable && (\n          <div className={classes.name}>{ingredient.name}</div>\n        )}\n      </div>\n    );\n}\n\nconst useClasses = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  checkBox: {\n    paddingRight: '0.5em',\n  },\n  nameCheckable: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'left',\n    fontSize: '1em',\n  },\n  name: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'left',\n    fontSize: '1em',\n    paddingLeft: '1em',\n    paddingTop: '0.5em',\n    paddingBottom: '0.5em',\n  },\n});\n","import React from 'react';\nimport { IngredientListItem } from './IngredientListItem';\n\nexport function IngredientsList({ ingredients, setIngredients, checkable }) {\n  const setChecked = (i) => {\n    ingredients[i].checked = !ingredients[i].checked;\n    setIngredients([...ingredients]);\n  };\n\n  if (!checkable && typeof ingredients[0] === \"string\") {\n    ingredients = ingredients.map((ingredient) => {\n      return { name: ingredient, checked: false };\n    });\n  }\n  return (\n    <div style={{ width: '100%' }}>\n      {ingredients.map((ingredient, i) => (\n        <IngredientListItem\n          setChecked={() => {\n            setChecked(i);\n          }}\n          checkable={checkable}\n          ingredient={ingredient}\n          key={i}\n        />\n      ))}\n    </div>\n  );\n}\n","const storage = window.localStorage;\n\n///Gets an object or string for the given key from localStorage\nexport function getItem(key) {\n    var item = storage.getItem(key);\n    if (item === null)\n        return null;\n\n    //Try parsing, if failed return normal string\n    try {\n        return JSON.parse(item);\n    }\n    catch (error) {\n        return item;\n    }\n}\n\n///Sets an object or string for the given key from localStorage\nexport function setItem(key, item) {\n    var serializedItem = item;\n    if (typeof item !== 'string') {\n        serializedItem = JSON.stringify(item); //ASK: throw an exception on failure? \n    }\n    storage.setItem(key, serializedItem);\n}\n\nexport function removeItem(key) {\n    storage.removeItem(key);\n}\n\nconst getAll = () => {\n  return getItem(\"favourites\");\n};\n\nconst get = (uri) => {\n  const t = getAll();\n  if (!t || !t[uri]) return null;\n  return t[uri];\n};\n\nconst isFav = (uri) => {\n  if (!uri) { return false; }\n  return !!get(uri);\n}\n\nconst set = (obj) => {\n  let favs = getAll() || {};\n\n  obj.ingredients = obj.ingredients.map((ingred) =>\n    typeof ingred == \"string\" ? { name: ingred, checked: false } : ingred\n  );\n  favs[obj.uri] = obj;\n  setItem(\"favourites\", favs);\n};\n\nconst drop = (uriOrObj) => {\n  let favs = getAll();\n  if (typeof uriOrObj === \"string\") {\n    delete favs[uriOrObj];\n  } else {\n    delete favs[uriOrObj.uri];\n  }\n\n  setItem(\"favourites\", favs);\n};\n\nexport const Favourites = {\n  getAll: getAll,\n  get: get,\n  set: set,\n  drop: drop,\n  isFav: isFav\n};\n","// Removing unnecessary data and creating custom objects:\nexport const prepareCustomJSONs = (jsons) => {\n    // No recipe has been found:\n    if (jsons.length === 0) return 'No results';\n\n    // Some recipes have been found:\n    return jsons.map(json => ({\n        uri: json.recipe.uri,\n        label: json.recipe.label,\n        image: json.recipe.image,\n        calories: Math.round(json.recipe.calories) + ' kcal',\n        url: json.recipe.url,\n        servings: json.recipe.yield + ' servings',\n        ingredients: json.recipe.ingredientLines,\n        nutrients: prepareNutrientsArray(json.recipe.totalNutrients)\n    }));\n}\n\n//We need this function because API returns different structure, depending on q or r param\nexport const prepareCustomJSONsFromID = (jsons) => {\n    // No recipe has been found:\n    if (jsons.length === 0) return 'No results';\n\n    // Some recipes have been found:\n    return jsons.map(json => ({\n        uri: json.uri,\n        label: json.label,\n        image: json.image,\n        calories: Math.round(json.calories) + ' kcal',\n        url: json.url,\n        servings: json.yield + ' servings',\n        ingredients: json.ingredientLines,\n        nutrients: prepareNutrientsArray(json.totalNutrients)\n    }))[0];\n}\n\n// Converting JSON object into array of JSON objects (its keys):\nconst prepareNutrientsArray = (json) => {\n    var result = [];\n    for (var key in json)\n        result.push({\n            label: json[key].label,\n            quantity: Math.round(json[key].quantity * 1000) / 1000,\n            unit: json[key].unit\n        });\n    return result;\n}\n","export const appID = process.env.REACT_APP_appID; //Edamam app ID\nexport const appKey = process.env.REACT_APP_appKey;  //Edamam app key\n","// This file contains method responsible for communicating with EDAMAM's Recipe \n// Search API (documentation: https://developer.edamam.com/edamam-docs-recipe-api)\n\nimport { prepareCustomJSONs, prepareCustomJSONsFromID } from './PreparingJSONs';\nimport { appKey, appID } from './Settings';\n\n// List of recipes:\nexport const downloadRecipesQuery = (query, from, to) => {\n  return fetch(`https://api.edamam.com/search?app_id=${appID}`\n    + `&app_key=${appKey}&q=${query}&from=${from}&to=${to}`)\n    .then(response => response.json())\n    .then(json => prepareCustomJSONs(json.hits))\n    .catch(error => console.log(error));\n};\n\n\n// List of recipes:\nexport const downloadRecipeByID = (ID) => {\n  return fetch(`https://api.edamam.com/search?app_id=${appID}`\n    + `&app_key=${appKey}&r=${ID}`)\n    .then(response => response.json())\n    .then(json => prepareCustomJSONsFromID(json))\n    .catch(error => console.log(error));\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n    Accordion as MuiAccordion,\n    Typography,\n    AccordionSummary as MuiAccordionSummary,\n    AccordionDetails as MuiAccordionDetails,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Fab from '@material-ui/core/Fab';\nimport { useHistory } from 'react-router-dom';\nimport { IngredientsList } from '../components/IngredientsList';\nimport { Favourites } from '../utils/storage';\nimport { downloadRecipeByID } from '../data/RecipeSearchData';\n\nconst Accordion = withStyles({\n    root: {\n        '&:before': {\n            backgroundColor: 'white',\n        },\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n    root: {\n        minHeight: 0,\n        '&$expanded': {\n            minHeight: 0,\n        },\n    },\n    content: {\n        margin: 0,\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles({\n    root: {\n        paddingRight: '1em',\n        paddingLeft: '1em',\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n})(MuiAccordionDetails);\n\nexport default function RecipeDetails() {\n    const history = useHistory();\n    const styles = useStyles();\n\n    const [isFavourite, setIsFavourite] = useState(\n        Favourites.isFav(history.location.state.recipe.uri)\n    );\n\n    const [recipe, setRecipe] = useState(\n        Favourites.get(history.location.state.recipe.uri) ||\n        history.location.state.recipe\n    );\n\n    const setIngredients = (ingreds) => {\n        let rec = { ...recipe };\n        rec.ingredients = ingreds;\n        Favourites.set(rec);\n        setRecipe(rec);\n    }\n\n    const loadRecipe = useCallback((uri) => {\n        let url = \"http://www.edamam.com/ontologies/edamam.owl#\" + uri;\n        if (Favourites.isFav(url) && !recipe?.ingredients[0]?.name) {\n            setRecipe(Favourites.get(url));\n        } else if (!recipe) {\n            (async () =>\n                await downloadRecipeByID(url).then((x) => {\n                    setRecipe(x);\n                }))();\n        }\n    }, [recipe]);\n\n    useEffect(() => {\n        let n = window.location.href.search(\"recipeDetails\") + \"recipeDetails\".length + 1;\n        let uri = window.location.href.slice(n);\n        loadRecipe(uri);\n    }, [recipe, loadRecipe]);\n\n    const onFABClick = () => {\n        if (isFavourite) {\n            setIsFavourite(false);\n            Favourites.drop(recipe);\n        }\n        else {\n            setIsFavourite(true);\n            Favourites.set(recipe);\n            setRecipe(Favourites.get(recipe.uri));\n        }\n    }\n\n    const OnClickClose = () => {\n        history.goBack();\n    };\n\n    if (recipe === null || recipe === undefined) {\n        return (<></>);\n    }\n    return (\n        <div className={styles.container}>\n            {/* {Image & icons} */}\n\n            <div className={styles.imageBox}>\n                <div className={styles.icons}>\n                    <Button onClick={() => OnClickClose()} className={styles.IconLeft}>\n                        <CloseIcon />\n                    </Button>\n                    <Button href={`${recipe?.url}`} className={styles.IconRight}>\n                        <LinkIcon />\n                    </Button>\n                </div>\n                <img className={styles.image} src={recipe?.image} alt='recipe' />\n            </div>\n\n            {/* {Title} */}\n\n            <div className={styles.safeArea}>\n                <Typography className={styles.title}>{recipe?.label}</Typography>\n                <div className={styles.details}>\n                    <Typography className={styles.detailsLeft}>\n                        {recipe?.calories}\n                    </Typography>\n                    <Typography className={styles.detailsRight}>\n                        {recipe?.servings}\n                    </Typography>\n                </div>\n            </div>\n\n            {/* {Ingredients} */}\n\n            <Accordion elevation={0}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                >\n                    <Typography variant='h6'>Ingredients</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {(recipe.ingredients) && <IngredientsList\n                        checkable={isFavourite}\n                        ingredients={recipe.ingredients}\n                        setIngredients={(ingred) => {\n                            setIngredients(ingred);\n                        }}\n                    />}\n\n                </AccordionDetails>\n            </Accordion>\n\n            {/* {Nutrients} */}\n\n            <Accordion elevation={0}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                >\n                    <Typography variant='h6'>Nutrients Info</Typography>\n                </AccordionSummary>\n                <div className={styles.safeArea}>\n                    {recipe?.nutrients?.map((e, key) => {\n                        return (\n                            <AccordionDetails key={key} className={styles.accordionDetails}>\n                                <div className={styles.nutrition}>\n                                    <Typography className={styles.detailsLeft}>\n                                        {e.label}\n                                    </Typography>\n                                    <Typography className={styles.detailsRight}>\n                                        {e.quantity} {e.unit}\n                                    </Typography>\n                                </div>\n                            </AccordionDetails>\n                        );\n                    })}\n                </div>\n            </Accordion>\n\n            {/* Add Favourites button */}\n\n            <Fab onClick={onFABClick} className={styles.floatingButton} color='secondary'>\n                {isFavourite ? <DeleteIcon /> : <FavoriteIcon />}\n            </Fab>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    container: {\n        marginBottom: 50,\n        overflowX: 'hidden',\n    },\n    imageBox: {\n        position: 'relative',\n        height: 192,\n        overflow: 'hidden',\n    },\n    image: {\n        width: '100%',\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        zIndex: -1,\n    },\n    icons: {\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    IconLeft: {\n        position: 'absolute',\n        top: 8,\n        left: 0,\n        color: 'white',\n    },\n    IconRight: {\n        position: 'absolute',\n        top: 8,\n        right: 0,\n        color: 'white',\n    },\n    title: {\n        fontSize: '1.75em',\n        textAlign: 'start',\n        fontWeight: 'bold',\n        lineHeight: '1.0em',\n        paddingTop: '0.5em',\n    },\n    safeArea: {\n        paddingLeft: '1em',\n        paddingRight: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    details: {\n        paddingTop: '0.5em',\n        paddingBottom: '0.5em',\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    nutrition: {\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n    detailsLeft: {\n        float: 'left',\n        display: 'inline',\n        width: '50%',\n        textAlign: 'start',\n        fontSize: '1em',\n    },\n    detailsRight: {\n        float: 'right',\n        display: 'inline',\n        width: '50%',\n        textAlign: 'end',\n        fontSize: '1em',\n    },\n    description: {\n        fontSize: '1em',\n        textAlign: 'start',\n    },\n    floatingButton: {\n        position: 'fixed',\n        bottom: 16,\n        right: 16,\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from 'react-router-dom';\n\nexport default function BottomNavigationBar({ pathname }) {\n    const classes = useStyles();\n\n    let p = pathname\n    if (pathname === '' || pathname === 'FUD')\n        p = 'search'\n\n    return (\n        <BottomNavigation value={p} className={classes.root}>\n            <BottomNavigationAction component={Link} to={'/search'} label='Search' value='search' icon={<SearchIcon />} classes={{ label: classes.label, root: classes.button, selected: classes.selected }} />\n            <BottomNavigationAction component={Link} to={'/favorites'} label='Favorites' value='favorites' icon={<FavoriteIcon />} classes={{ label: classes.label, root: classes.button, selected: classes.selected }} />\n        </BottomNavigation>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        position: 'sticky',\n        bottom: 0,\n        width: '100%',\n        backgroundColor: '#6200EE',\n    },\n    button: {\n        width: '50%',\n        maxWidth: 'none',\n        '&$selected': {\n            color: 'white',\n        },\n    },\n    label: {\n        color: 'white',\n    },\n    selected: {\n\n    }\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\n//title: string,\n//subtitle: string\n//onClick: () => void \n//image: string, link to an image or image object (more info at https://material-ui.com/api/card-media/)\nexport default function RecipeCard ({ title, subTitle, image, onClick }) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} \n            onClick={() => {onClick()}}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={image}\n                    title={title}\n                />\n                <CardContent>\n                    <Typography variant='h6' align='left' noWrap={true}>\n                        {title}\n                    </Typography>\n                    <Typography variant='body2' align='left'>\n                        {subTitle}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        height: 'fit-content',\n    },\n    media: {\n        height: 194,\n    },\n});\n","// Custom App Bar with a 'Recipes' title and clickable SearchIcon,\n// which is responsible for showing Search Bar. The component has\n// been implemented on the basis of: https://material-ui.com/components/app-bar/\n\nimport React, { useRef, useState } from 'react';\nimport { IconButton, AppBar, Toolbar, Typography, InputBase, makeStyles } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nexport default function CustomAppBar({ onSearch, canSearch }) {\n    const styles = useStyles();\n    const [isSearching, setIsSearching] = useState(false);\n    const [canClear, setCanClear] = useState(false);\n    \n    // Searchbar's value:\n    const searchBarInput = useRef('');\n\n    // Reacting for clicking search button in search bar:\n    const searchButtonEvent = () => onSearch(searchBarInput.current.value);\n\n    // Handle with clicking \"Enter\":\n    const keyPress = (e) => {\n        if (e.keyCode === 13) {\n            e.target.blur();\n            onSearch(searchBarInput.current.value);\n        }\n    }\n\n    return (\n        <div className={styles.root}>\n            <AppBar position='static' className={styles.appBar}>\n            {isSearching \n            ?\n            <Toolbar> \n                <IconButton className={styles.backButton} \n                            onClick={() => { \n                                setIsSearching(false); \n                                setCanClear(false);\n                                }}>\n                    <ArrowBackIcon/>\n                </IconButton>\n                {/* Searchbar */}\n                <div className={styles.searchBar}>\n                    {/* Search */}\n                    <IconButton className={styles.searchBarButton} \n                                onClick={searchButtonEvent}>\n                        <SearchIcon/>\n                    </IconButton>\n                    {/* Input */}\n                    <InputBase placeholder='Search for recipe'\n                               inputRef={searchBarInput}\n                               onChange={(input) => setCanClear(input.target.value.length > 0)}\n                               className={styles.searchBarInput}\n                               onKeyDown={keyPress}/>\n                    {/* Clear */}\n                    {canClear\n                    ? \n                    <IconButton className={styles.searchBarButton} \n                                onClick={() => { \n                                    searchBarInput.current.value = ''; \n                                    setCanClear(false);\n                                }}>\n                        <CloseIcon/>\n                    </IconButton>\n                    :\n                    <></>\n                    }\n                </div>\n            </Toolbar>\n            :\n            <Toolbar> {/* Title + button */}\n                <Typography className={styles.title}>Recipes</Typography>\n                {canSearch &&\n                <IconButton className={styles.searchButton} \n                            onClick={() => { setIsSearching(true); }}>\n                    <SearchIcon/>\n                </IconButton>\n                }\n            </Toolbar>\n            }\n            </AppBar>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    // Both variants:\n    root: {\n        position: 'sticky',\n        top: 0,\n        zIndex: 9999,\n    },\n    appBar: { \n        backgroundColor: '#6200EE', \n    },\n\n    // AppBar variant:\n    title: { \n        width: '100%', \n        textAlign: 'left', \n        color: 'rgba(255, 255, 255, 0.75)',\n        fontSize: '1.25em',\n        userSelect: 'none',\n    },\n    searchButton: { \n        padding: 0, \n        color: 'rgba(255, 255, 255, 0.75)',\n    },\n\n    // SearchBar variant:\n    backButton: {\n        paddingLeft: 0, \n        color: 'rgba(255, 255, 255, 0.75)',\n    },\n    searchBar: { \n        borderRadius: 4, \n        backgroundColor: 'rgba(255, 255, 255, 0.75)', \n        width: '100%', \n        display: 'flex',\n    },\n    searchBarButton: { \n        paddingTop: 0, \n        paddingBottom: 0, \n        paddingLeft: '1%', \n        paddingRight: '1%',\n        color: 'rgba(0, 0, 0, 0.75)',\n    },\n    searchBarInput: {\n        width: '100%',\n        fontSize: '1.25em',\n        lineHeight: '1.5em',\n    },\n});\n  ","import { makeStyles } from '@material-ui/core/styles';\nimport * as storage from '../utils/storage';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport RecipeCard from '../components/RecipeCard';\nimport CustomAppBar from '../components/CustomAppBar';\n\nexport default function FavoritePage() {\n    const classes = useStyles();\n    const favs = storage.getItem('favourites');\n    const history = useHistory();\n\n    const OnClickItem = (item) => {\n        let lastSegment = item.uri.split(\"#\").pop();\n        history.push({ pathname: '/recipeDetails/' + lastSegment, state: { recipe: item } });\n    }\n\n    const createRecipeDetails = () => {\n        if (favs === null)\n            return [];\n        var result = [];\n        for (let key in favs) {\n            let val = favs[key];\n            result.push(\n                <Grid item xs={6} sm={4} md={3} lg={2} key={val.url}>\n                    <RecipeCard\n                        title={val.label} subTitle={val.calories}\n                        image={val.image} key={val.url}\n                        onClick={() => OnClickItem(val)} />\n                </Grid>\n            )\n        }\n        return result;\n    }\n\n    return (\n        <>\n            <CustomAppBar canSearch={false}/>\n            <div className={classes.root}>\n                <Grid container spacing={1} justify='center'>\n                    {createRecipeDetails()}\n                </Grid>\n            </div>\n        </>\n    );\n}\n\nconst useStyles = makeStyles({\n    root: {\n        margin: 8,\n        minHeight: '100vh',\n    },\n});\n","//Get's nth origin url segment\nexport function getPathnameSegment(n) {\n    let arr = window.location.pathname.split('/');\n    return arr[n];\n}\n","import React, { Fragment, useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecipeCard from '../components/RecipeCard';\nimport CustomAppBar from '../components/CustomAppBar';\nimport { downloadRecipesQuery } from '../data/RecipeSearchData';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { getPathnameSegment } from '../utils/urlUtils';\n\n//Global state for search page\nvar lastFetchCache = [];\n\nexport default function SearchPage() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [recipes, setRecipes] = useState(lastFetchCache);\n    const [phrase, setPhrase] = useState(getPathnameSegment(3));\n\n    const fetchRecipes = () => {\n        let p = phrase\n        if (p === undefined || p === null || p.length === 0) {\n            p = 'shrimp';\n        }\n\n        downloadRecipesQuery(p, 0, 50)\n            .then(recipes => {\n                if (recipes === undefined) console.log('Failed to fetch (wrong keys?)');\n                else {\n                    setRecipes(recipes);\n                    lastFetchCache = recipes;\n                }\n            });\n    }\n\n    //Fetch data on mount, only if cache does not contain anything\n    // eslint-disable-next-line\n    useEffect(() => {\n        if (recipes.length === 0)\n            fetchRecipes();\n        // eslint-disable-next-line\n    }, []);\n\n    //Prevent the following effect, from running on mount\n    const isMounted = useRef(false);\n    //Fetch new data, when phrase changes\n    useEffect(() => {\n        if (isMounted.current === true) {\n            fetchRecipes();\n        }\n        else {\n            isMounted.current = true;\n        }\n        // eslint-disable-next-line\n    }, [phrase]);\n\n    const OnSearchClick = (input) => {\n        history.replace({ pathname: '/search/' + input });\n        setPhrase(input);\n    }\n\n    const OnClickItem = (item) => {\n        let parts = item.uri.split(\"#\").pop();\n        history.push({\n            pathname: \"/recipeDetails/\" + parts,\n            state: { recipe: item },\n        });\n    };\n\n    return (\n        <Fragment>\n            <CustomAppBar canSearch={true} onSearch={input => OnSearchClick(input)} />\n            <div className={classes.root}>\n                <Grid container spacing={1} justify='center'>\n                    {recipes.map(recipe =>\n                        <Grid item xs={6} sm={4} md={3} lg={2} key={recipe.url}>\n                            <RecipeCard\n                                title={recipe.label} subTitle={recipe.calories}\n                                image={recipe.image} key={recipe.url}\n                                onClick={() => OnClickItem(recipe)} />\n                        </Grid>\n                    )}\n                </Grid>\n            </div>\n        </Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    root: {\n        margin: 8,\n        minHeight: '100vh',\n    },\n});\n","import React, { Fragment } from 'react';\nimport BottomNavigationBar from '../components/BottomNavigation';\nimport FavoritePage from './FavoritePage';\nimport SearchPage from './SearchPage';\nimport { getPathnameSegment } from '../utils/urlUtils';\n\nexport default function MainPages() {\n    const pathname = getPathnameSegment(2);\n\n    return (\n        <Fragment>\n            { pathname === 'favorites' ? <FavoritePage /> : <SearchPage />}\n            <BottomNavigationBar pathname={pathname} />\n        </Fragment>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport RecipeDetails from './pages/RecipeDetails';\nimport MainPages from './pages/MainPages';\n\nexport default function App() {\n  return (\n    <Router basename=\"/FUD\">\n      <div className='App'>\n        <Switch>\n          <Route path='/recipeDetails' component={RecipeDetails} />\n          <Route path='/' component={MainPages} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './utils/serviceWorkerRegistration';\nimport reportWebVitals from './utils/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals())\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}